let pretty_ir_ast p = 
  Conceptual.AstCompiler.compile_program_to_ast p 
  |> Option.map (Conceptual.Semant.typecheck_prog p)
  |> Option.map snd
  |> Option.map (Conceptual.CodeGen.translate_program_to_ir)
  |> Option.map (List.map Conceptual.AlloyPretty.program_to_tree) 
  |> Option.map (List.map PrintBox_text.to_string)
  |> Option.value ~default: ["Error"]
  
let prog_dir = "../../progs/" 
let (~/) file = prog_dir ^ file ^ ".con" 

let (!>) p =  ~/p |> pretty_ir_ast |> List.fold_left (fun _ s -> print_endline s) ()

let %test "Program found" = Sys.file_exists (~/"reservation")

let %expect_test "Reservation Concept Alloy AST" =
  !> "reservation";
  [%expect {| 
    [36mProgram[0m
    â”œâ”€[36mModule[0m
    â”‚ â”œâ”€[33mreservation[0m
    â”‚ â””â”€[36mParameters[0m
    â”‚   â”œâ”€[33mUser[0m
    â”‚   â””â”€[33mResource[0m
    â”œâ”€[36mPurpose[0m
    â”‚ â””â”€[36mmanage efficient use of resources[0m
    â”œâ”€[36mDependencies[0m
    â”œâ”€[36mSignatures[0m
    â”‚ â”œâ”€[36mSignature[0m
    â”‚ â”‚ â”œâ”€[33mState[0m
    â”‚ â”‚ â”œâ”€[34mOne [0m
    â”‚ â”‚ â””â”€[36mFields[0m
    â”‚ â”‚   â”œâ”€[36mField[0m
    â”‚ â”‚   â”‚ â”œâ”€[33mavailable[0m
    â”‚ â”‚   â”‚ â”œâ”€[32mSet Resource[0m
    â”‚ â”‚   â”‚ â”œâ”€[36mExpression[0m
    â”‚ â”‚   â”‚ â”‚ â””â”€[36mNone[0m
    â”‚ â”‚   â”‚ â””â”€[36mfalse[0m
    â”‚ â”‚   â””â”€[36mField[0m
    â”‚ â”‚     â”œâ”€[33mreservations[0m
    â”‚ â”‚     â”œâ”€[32mUser -> Resource[0m
    â”‚ â”‚     â”œâ”€[36mExpression[0m
    â”‚ â”‚     â”‚ â””â”€[36mNone[0m
    â”‚ â”‚     â””â”€[36mfalse[0m
    â”‚ â”œâ”€[36mSignature[0m
    â”‚ â”‚ â”œâ”€[33mResource[0m
    â”‚ â”‚ â”œâ”€[36mNo Fields[0m
    â”‚ â””â”€[36mSignature[0m
    â”‚   â”œâ”€[33mUser[0m
    â”‚   â”œâ”€[36mNo Fields[0m
    â”œâ”€[36mFacts[0m
    â”œâ”€[36mAssertions[0m
    â”‚ â”œâ”€[36mAssertion[0m
    â”‚ â”‚ â”œâ”€[33m_principle0[0m
    â”‚ â”‚ â””â”€[36mQuantifier[0m
    â”‚ â”‚   â”œâ”€[34mAll[0m
    â”‚ â”‚   â”œâ”€[36mVars[0m
    â”‚ â”‚   â”‚ â”œâ”€[36mVar[0m
    â”‚ â”‚   â”‚ â”‚ â”œâ”€[33mr[0m
    â”‚ â”‚   â”‚ â”‚ â””â”€[32mResource[0m
    â”‚ â”‚   â”‚ â””â”€[36mVar[0m
    â”‚ â”‚   â”‚   â”œâ”€[33mu[0m
    â”‚ â”‚   â”‚   â””â”€[32mUser[0m
    â”‚ â”‚   â””â”€[36mUnop[0m
    â”‚ â”‚     â”œâ”€[34mAlways[0m
    â”‚ â”‚     â””â”€[36mBinop[0m
    â”‚ â”‚       â”œâ”€[34mImplication[0m
    â”‚ â”‚       â”œâ”€[36mCall[0m
    â”‚ â”‚       â”‚ â”œâ”€[33mreserve[0m
    â”‚ â”‚       â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚       â”‚   â”œâ”€[33mu[0m
    â”‚ â”‚       â”‚   â””â”€[33mr[0m
    â”‚ â”‚       â””â”€[36mUnop[0m
    â”‚ â”‚         â”œâ”€[34mAfter[0m
    â”‚ â”‚         â””â”€[36mBinop[0m
    â”‚ â”‚           â”œâ”€[34mRelease[0m
    â”‚ â”‚           â”œâ”€[36mCall[0m
    â”‚ â”‚           â”‚ â”œâ”€[33m_can_use[0m
    â”‚ â”‚           â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚           â”‚   â”œâ”€[33mu[0m
    â”‚ â”‚           â”‚   â””â”€[33mr[0m
    â”‚ â”‚           â””â”€[36mCall[0m
    â”‚ â”‚             â”œâ”€[33mcancel[0m
    â”‚ â”‚             â””â”€[36mArgs[0m
    â”‚ â”‚               â”œâ”€[33mu[0m
    â”‚ â”‚               â””â”€[33mr[0m
    â”‚ â””â”€[36mAssertion[0m
    â”‚   â”œâ”€[33m_principle1[0m
    â”‚   â””â”€[36mQuantifier[0m
    â”‚     â”œâ”€[34mAll[0m
    â”‚     â”œâ”€[36mVars[0m
    â”‚     â”‚ â”œâ”€[36mVar[0m
    â”‚     â”‚ â”‚ â”œâ”€[33mu2[0m
    â”‚     â”‚ â”‚ â””â”€[32mUser[0m
    â”‚     â”‚ â”œâ”€[36mVar[0m
    â”‚     â”‚ â”‚ â”œâ”€[33mr[0m
    â”‚     â”‚ â”‚ â””â”€[32mResource[0m
    â”‚     â”‚ â””â”€[36mVar[0m
    â”‚     â”‚   â”œâ”€[33mu[0m
    â”‚     â”‚   â””â”€[32mUser[0m
    â”‚     â””â”€[36mUnop[0m
    â”‚       â”œâ”€[34mAlways[0m
    â”‚       â””â”€[36mBinop[0m
    â”‚         â”œâ”€[34mImplication[0m
    â”‚         â”œâ”€[36mCall[0m
    â”‚         â”‚ â”œâ”€[33mreserve[0m
    â”‚         â”‚ â””â”€[36mArgs[0m
    â”‚         â”‚   â”œâ”€[33mu[0m
    â”‚         â”‚   â””â”€[33mr[0m
    â”‚         â””â”€[36mUnop[0m
    â”‚           â”œâ”€[34mAfter[0m
    â”‚           â””â”€[36mBinop[0m
    â”‚             â”œâ”€[34mRelease[0m
    â”‚             â”œâ”€[36mUnop[0m
    â”‚             â”‚ â”œâ”€[34mNot[0m
    â”‚             â”‚ â””â”€[36mCall[0m
    â”‚             â”‚   â”œâ”€[33m_can_reserve[0m
    â”‚             â”‚   â””â”€[36mArgs[0m
    â”‚             â”‚     â”œâ”€[33mu2[0m
    â”‚             â”‚     â””â”€[33mr[0m
    â”‚             â””â”€[36mCall[0m
    â”‚               â”œâ”€[33mcancel[0m
    â”‚               â””â”€[36mArgs[0m
    â”‚                 â”œâ”€[33mu[0m
    â”‚                 â””â”€[33mr[0m
    â””â”€[36mPredicates and Functions[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33mprovide[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mQuantifier[0m
      â”‚ â”‚   â”œâ”€[34mNo[0m
      â”‚ â”‚   â”œâ”€[36mVars[0m
      â”‚ â”‚   â”‚ â”œâ”€[36mVar[0m
      â”‚ â”‚   â”‚ â”‚ â”œâ”€[33m_u0[0m
      â”‚ â”‚   â”‚ â”‚ â””â”€[32mUser[0m
      â”‚ â”‚   â”‚ â””â”€[36mVar[0m
      â”‚ â”‚   â”‚   â”œâ”€[33m_r1[0m
      â”‚ â”‚   â”‚   â””â”€[32mResource[0m
      â”‚ â”‚   â””â”€[36mBinop[0m
      â”‚ â”‚     â”œâ”€[34mAnd[0m
      â”‚ â”‚     â”œâ”€[36mBinop[0m
      â”‚ â”‚     â”‚ â”œâ”€[34mIn[0m
      â”‚ â”‚     â”‚ â”œâ”€[33mr[0m
      â”‚ â”‚     â”‚ â””â”€[33m_r1[0m
      â”‚ â”‚     â””â”€[36mBinop[0m
      â”‚ â”‚       â”œâ”€[34mIn[0m
      â”‚ â”‚       â”œâ”€[36mBinop[0m
      â”‚ â”‚       â”‚ â”œâ”€[34mProduct[0m
      â”‚ â”‚       â”‚ â”œâ”€[33m_u0[0m
      â”‚ â”‚       â”‚ â””â”€[33m_r1[0m
      â”‚ â”‚       â””â”€[33m(State.reservations)[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33mr[0m
      â”‚ â”‚   â””â”€[32mResource[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.available')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mUnion[0m
      â”‚   â”‚   â”œâ”€[33m(State.available)[0m
      â”‚   â”‚   â””â”€[33mr[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.reservations')[0m
      â”‚     â””â”€[33m(State.reservations)[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33mretract[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mNone[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33mr[0m
      â”‚ â”‚   â””â”€[32mResource[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.available')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mDifference[0m
      â”‚   â”‚   â”œâ”€[33m(State.available)[0m
      â”‚   â”‚   â””â”€[33mr[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.reservations')[0m
      â”‚     â””â”€[33m(State.reservations)[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33mreserve[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mBinop[0m
      â”‚ â”‚   â”œâ”€[34mIn[0m
      â”‚ â”‚   â”œâ”€[33mr[0m
      â”‚ â”‚   â””â”€[33m(State.available)[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â”œâ”€[36mParameter[0m
      â”‚ â”‚ â”‚ â”œâ”€[33mu[0m
      â”‚ â”‚ â”‚ â””â”€[32mUser[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33mr[0m
      â”‚ â”‚   â””â”€[32mResource[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.reservations')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mUnion[0m
      â”‚   â”‚   â”œâ”€[33m(State.reservations)[0m
      â”‚   â”‚   â””â”€[33mu->r[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.available')[0m
      â”‚     â””â”€[36mBinop[0m
      â”‚       â”œâ”€[34mDifference[0m
      â”‚       â”œâ”€[33m(State.available)[0m
      â”‚       â””â”€[33mr[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33mcancel[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mBinop[0m
      â”‚ â”‚   â”œâ”€[34mIn[0m
      â”‚ â”‚   â”œâ”€[33mr[0m
      â”‚ â”‚   â””â”€[36mBinop[0m
      â”‚ â”‚     â”œâ”€[34mJoin[0m
      â”‚ â”‚     â”œâ”€[33mu[0m
      â”‚ â”‚     â””â”€[33m(State.reservations)[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â”œâ”€[36mParameter[0m
      â”‚ â”‚ â”‚ â”œâ”€[33mu[0m
      â”‚ â”‚ â”‚ â””â”€[32mUser[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33mr[0m
      â”‚ â”‚   â””â”€[32mResource[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.reservations')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mDifference[0m
      â”‚   â”‚   â”œâ”€[33m(State.reservations)[0m
      â”‚   â”‚   â””â”€[33mu->r[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.available')[0m
      â”‚     â””â”€[36mBinop[0m
      â”‚       â”œâ”€[34mUnion[0m
      â”‚       â”œâ”€[33m(State.available)[0m
      â”‚       â””â”€[33mr[0m
      â””â”€[36mPredicate[0m
        â”œâ”€[33muse[0m
        â”œâ”€[36mCondition[0m
        â”‚ â””â”€[36mBinop[0m
        â”‚   â”œâ”€[34mIn[0m
        â”‚   â”œâ”€[33mr[0m
        â”‚   â””â”€[36mBinop[0m
        â”‚     â”œâ”€[34mJoin[0m
        â”‚     â”œâ”€[33mu[0m
        â”‚     â””â”€[33m(State.reservations)[0m
        â”œâ”€[36mParameters[0m
        â”‚ â”œâ”€[36mParameter[0m
        â”‚ â”‚ â”œâ”€[33mu[0m
        â”‚ â”‚ â””â”€[32mUser[0m
        â”‚ â””â”€[36mParameter[0m
        â”‚   â”œâ”€[33mr[0m
        â”‚   â””â”€[32mResource[0m
        â””â”€[36mBody[0m
          â”œâ”€[36mAssignment[0m
          â”‚ â”œâ”€[33m(State.available')[0m
          â”‚ â””â”€[33m(State.available)[0m
          â””â”€[36mAssignment[0m
            â”œâ”€[33m(State.reservations')[0m
            â””â”€[33m(State.reservations)[0m |}]

let %expect_test "Trash Concept Alloy AST" = 
  !> "trash";
  [%expect {|
    [36mProgram[0m
    â”œâ”€[36mModule[0m
    â”‚ â”œâ”€[33mtrash[0m
    â”‚ â””â”€[36mParameters[0m
    â”‚   â””â”€[33mItem[0m
    â”œâ”€[36mPurpose[0m
    â”‚ â””â”€[36mto allow undoing of deletions[0m
    â”œâ”€[36mDependencies[0m
    â”œâ”€[36mSignatures[0m
    â”‚ â”œâ”€[36mSignature[0m
    â”‚ â”‚ â”œâ”€[33mState[0m
    â”‚ â”‚ â”œâ”€[34mOne [0m
    â”‚ â”‚ â””â”€[36mFields[0m
    â”‚ â”‚   â”œâ”€[36mField[0m
    â”‚ â”‚   â”‚ â”œâ”€[33maccessible[0m
    â”‚ â”‚   â”‚ â”œâ”€[32mSet Item[0m
    â”‚ â”‚   â”‚ â”œâ”€[36mExpression[0m
    â”‚ â”‚   â”‚ â”‚ â””â”€[36mNone[0m
    â”‚ â”‚   â”‚ â””â”€[36mfalse[0m
    â”‚ â”‚   â””â”€[36mField[0m
    â”‚ â”‚     â”œâ”€[33mtrashed[0m
    â”‚ â”‚     â”œâ”€[32mSet Item[0m
    â”‚ â”‚     â”œâ”€[36mExpression[0m
    â”‚ â”‚     â”‚ â””â”€[36mNone[0m
    â”‚ â”‚     â””â”€[36mfalse[0m
    â”‚ â””â”€[36mSignature[0m
    â”‚   â”œâ”€[33mItem[0m
    â”‚   â”œâ”€[36mNo Fields[0m
    â”œâ”€[36mFacts[0m
    â”œâ”€[36mAssertions[0m
    â”‚ â”œâ”€[36mAssertion[0m
    â”‚ â”‚ â”œâ”€[33m_principle0[0m
    â”‚ â”‚ â””â”€[36mQuantifier[0m
    â”‚ â”‚   â”œâ”€[34mAll[0m
    â”‚ â”‚   â”œâ”€[36mVars[0m
    â”‚ â”‚   â”‚ â””â”€[36mVar[0m
    â”‚ â”‚   â”‚   â”œâ”€[33mx[0m
    â”‚ â”‚   â”‚   â””â”€[32mItem[0m
    â”‚ â”‚   â””â”€[36mUnop[0m
    â”‚ â”‚     â”œâ”€[34mAlways[0m
    â”‚ â”‚     â””â”€[36mBinop[0m
    â”‚ â”‚       â”œâ”€[34mImplication[0m
    â”‚ â”‚       â”œâ”€[36mCall[0m
    â”‚ â”‚       â”‚ â”œâ”€[33mdelete[0m
    â”‚ â”‚       â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚       â”‚   â””â”€[33mx[0m
    â”‚ â”‚       â””â”€[36mUnop[0m
    â”‚ â”‚         â”œâ”€[34mAfter[0m
    â”‚ â”‚         â””â”€[36mBinop[0m
    â”‚ â”‚           â”œâ”€[34mImplication[0m
    â”‚ â”‚           â”œâ”€[36mCall[0m
    â”‚ â”‚           â”‚ â”œâ”€[33mrestore[0m
    â”‚ â”‚           â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚           â”‚   â””â”€[33mx[0m
    â”‚ â”‚           â””â”€[36mUnop[0m
    â”‚ â”‚             â”œâ”€[34mAfter[0m
    â”‚ â”‚             â””â”€[36mBinop[0m
    â”‚ â”‚               â”œâ”€[34mIn[0m
    â”‚ â”‚               â”œâ”€[33mx[0m
    â”‚ â”‚               â””â”€[33m(State.accessible)[0m
    â”‚ â””â”€[36mAssertion[0m
    â”‚   â”œâ”€[33m_principle1[0m
    â”‚   â””â”€[36mQuantifier[0m
    â”‚     â”œâ”€[34mAll[0m
    â”‚     â”œâ”€[36mVars[0m
    â”‚     â”‚ â””â”€[36mVar[0m
    â”‚     â”‚   â”œâ”€[33mx[0m
    â”‚     â”‚   â””â”€[32mItem[0m
    â”‚     â””â”€[36mUnop[0m
    â”‚       â”œâ”€[34mAlways[0m
    â”‚       â””â”€[36mBinop[0m
    â”‚         â”œâ”€[34mImplication[0m
    â”‚         â”œâ”€[36mCall[0m
    â”‚         â”‚ â”œâ”€[33mdelete[0m
    â”‚         â”‚ â””â”€[36mArgs[0m
    â”‚         â”‚   â””â”€[33mx[0m
    â”‚         â””â”€[36mUnop[0m
    â”‚           â”œâ”€[34mAfter[0m
    â”‚           â””â”€[36mBinop[0m
    â”‚             â”œâ”€[34mImplication[0m
    â”‚             â”œâ”€[36mCall[0m
    â”‚             â”‚ â”œâ”€[33mclear[0m
    â”‚             â”‚ â””â”€[36mArgs[0m
    â”‚             â””â”€[36mUnop[0m
    â”‚               â”œâ”€[34mAfter[0m
    â”‚               â””â”€[36mUnop[0m
    â”‚                 â”œâ”€[34mNot[0m
    â”‚                 â””â”€[36mBinop[0m
    â”‚                   â”œâ”€[34mIn[0m
    â”‚                   â”œâ”€[33mx[0m
    â”‚                   â””â”€[36mBinop[0m
    â”‚                     â”œâ”€[34mUnion[0m
    â”‚                     â”œâ”€[33m(State.accessible)[0m
    â”‚                     â””â”€[33m(State.trashed)[0m
    â””â”€[36mPredicates and Functions[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33mcreate[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mUnop[0m
      â”‚ â”‚   â”œâ”€[34mNot[0m
      â”‚ â”‚   â””â”€[36mBinop[0m
      â”‚ â”‚     â”œâ”€[34mIn[0m
      â”‚ â”‚     â”œâ”€[33mx[0m
      â”‚ â”‚     â””â”€[36mBinop[0m
      â”‚ â”‚       â”œâ”€[34mUnion[0m
      â”‚ â”‚       â”œâ”€[33m(State.accessible)[0m
      â”‚ â”‚       â””â”€[33m(State.trashed)[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33mx[0m
      â”‚ â”‚   â””â”€[32mItem[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.accessible')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mUnion[0m
      â”‚   â”‚   â”œâ”€[33m(State.accessible)[0m
      â”‚   â”‚   â””â”€[33mx[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.trashed')[0m
      â”‚     â””â”€[33m(State.trashed)[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33mdelete[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mBinop[0m
      â”‚ â”‚   â”œâ”€[34mAnd[0m
      â”‚ â”‚   â”œâ”€[36mBinop[0m
      â”‚ â”‚   â”‚ â”œâ”€[34mIn[0m
      â”‚ â”‚   â”‚ â”œâ”€[33mx[0m
      â”‚ â”‚   â”‚ â””â”€[33m(State.accessible)[0m
      â”‚ â”‚   â””â”€[36mUnop[0m
      â”‚ â”‚     â”œâ”€[34mNot[0m
      â”‚ â”‚     â””â”€[36mBinop[0m
      â”‚ â”‚       â”œâ”€[34mIn[0m
      â”‚ â”‚       â”œâ”€[33mx[0m
      â”‚ â”‚       â””â”€[33m(State.trashed)[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33mx[0m
      â”‚ â”‚   â””â”€[32mItem[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.trashed')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mUnion[0m
      â”‚   â”‚   â”œâ”€[33m(State.trashed)[0m
      â”‚   â”‚   â””â”€[33mx[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.accessible')[0m
      â”‚     â””â”€[36mBinop[0m
      â”‚       â”œâ”€[34mDifference[0m
      â”‚       â”œâ”€[33m(State.accessible)[0m
      â”‚       â””â”€[33mx[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33mrestore[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mBinop[0m
      â”‚ â”‚   â”œâ”€[34mIn[0m
      â”‚ â”‚   â”œâ”€[33mx[0m
      â”‚ â”‚   â””â”€[33m(State.trashed)[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33mx[0m
      â”‚ â”‚   â””â”€[32mItem[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.trashed')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mDifference[0m
      â”‚   â”‚   â”œâ”€[33m(State.trashed)[0m
      â”‚   â”‚   â””â”€[33mx[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.accessible')[0m
      â”‚     â””â”€[36mBinop[0m
      â”‚       â”œâ”€[34mUnion[0m
      â”‚       â”œâ”€[33m(State.accessible)[0m
      â”‚       â””â”€[33mx[0m
      â””â”€[36mPredicate[0m
        â”œâ”€[33mclear[0m
        â”œâ”€[36mCondition[0m
        â”‚ â””â”€[36mBinop[0m
        â”‚   â”œâ”€[34mNeq[0m
        â”‚   â”œâ”€[33m(State.trashed)[0m
        â”‚   â””â”€[34mNone[0m
        â”œâ”€[36mParameters[0m
        â””â”€[36mBody[0m
          â”œâ”€[36mAssignment[0m
          â”‚ â”œâ”€[33m(State.trashed')[0m
          â”‚ â””â”€[34mNone[0m
          â””â”€[36mAssignment[0m
            â”œâ”€[33m(State.accessible')[0m
            â””â”€[33m(State.accessible)[0m |}]

let %expect_test "Email Concept Alloy AST" = 
  !> "email";
  [%expect {|
    [36mProgram[0m
    â”œâ”€[36mModule[0m
    â”‚ â”œâ”€[33memail[0m
    â”‚ â””â”€[36mNo Parameters[0m
    â”œâ”€[36mPurpose[0m
    â”‚ â””â”€[36mcommunicate with private messages[0m
    â”œâ”€[36mDependencies[0m
    â”œâ”€[36mSignatures[0m
    â”‚ â”œâ”€[36mSignature[0m
    â”‚ â”‚ â”œâ”€[33mState[0m
    â”‚ â”‚ â”œâ”€[34mOne [0m
    â”‚ â”‚ â””â”€[36mFields[0m
    â”‚ â”‚   â”œâ”€[36mField[0m
    â”‚ â”‚   â”‚ â”œâ”€[33minbox[0m
    â”‚ â”‚   â”‚ â”œâ”€[32mUser -> Set Message[0m
    â”‚ â”‚   â”‚ â”œâ”€[36mExpression[0m
    â”‚ â”‚   â”‚ â”‚ â””â”€[36mNone[0m
    â”‚ â”‚   â”‚ â””â”€[36mfalse[0m
    â”‚ â”‚   â”œâ”€[36mField[0m
    â”‚ â”‚   â”‚ â”œâ”€[33mfrom[0m
    â”‚ â”‚   â”‚ â”œâ”€[32mMessage -> User[0m
    â”‚ â”‚   â”‚ â”œâ”€[36mExpression[0m
    â”‚ â”‚   â”‚ â”‚ â””â”€[36mNone[0m
    â”‚ â”‚   â”‚ â””â”€[36mfalse[0m
    â”‚ â”‚   â”œâ”€[36mField[0m
    â”‚ â”‚   â”‚ â”œâ”€[33mto[0m
    â”‚ â”‚   â”‚ â”œâ”€[32mMessage -> User[0m
    â”‚ â”‚   â”‚ â”œâ”€[36mExpression[0m
    â”‚ â”‚   â”‚ â”‚ â””â”€[36mNone[0m
    â”‚ â”‚   â”‚ â””â”€[36mfalse[0m
    â”‚ â”‚   â””â”€[36mField[0m
    â”‚ â”‚     â”œâ”€[33mcontent[0m
    â”‚ â”‚     â”œâ”€[32mMessage -> Content[0m
    â”‚ â”‚     â”œâ”€[36mExpression[0m
    â”‚ â”‚     â”‚ â””â”€[36mNone[0m
    â”‚ â”‚     â””â”€[36mfalse[0m
    â”‚ â”œâ”€[36mSignature[0m
    â”‚ â”‚ â”œâ”€[33mUser[0m
    â”‚ â”‚ â”œâ”€[36mNo Fields[0m
    â”‚ â”œâ”€[36mSignature[0m
    â”‚ â”‚ â”œâ”€[33mContent[0m
    â”‚ â”‚ â”œâ”€[36mNo Fields[0m
    â”‚ â””â”€[36mSignature[0m
    â”‚   â”œâ”€[33mMessage[0m
    â”‚   â”œâ”€[36mNo Fields[0m
    â”œâ”€[36mFacts[0m
    â”œâ”€[36mAssertions[0m
    â”‚ â””â”€[36mAssertion[0m
    â”‚   â”œâ”€[33m_principle0[0m
    â”‚   â””â”€[36mQuantifier[0m
    â”‚     â”œâ”€[34mAll[0m
    â”‚     â”œâ”€[36mVars[0m
    â”‚     â”‚ â”œâ”€[36mVar[0m
    â”‚     â”‚ â”‚ â”œâ”€[33mc[0m
    â”‚     â”‚ â”‚ â””â”€[32mContent[0m
    â”‚     â”‚ â”œâ”€[36mVar[0m
    â”‚     â”‚ â”‚ â”œâ”€[33mm[0m
    â”‚     â”‚ â”‚ â””â”€[32mMessage[0m
    â”‚     â”‚ â”œâ”€[36mVar[0m
    â”‚     â”‚ â”‚ â”œâ”€[33mt[0m
    â”‚     â”‚ â”‚ â””â”€[32mUser[0m
    â”‚     â”‚ â””â”€[36mVar[0m
    â”‚     â”‚   â”œâ”€[33mf[0m
    â”‚     â”‚   â””â”€[32mUser[0m
    â”‚     â””â”€[36mUnop[0m
    â”‚       â”œâ”€[34mAlways[0m
    â”‚       â””â”€[36mBinop[0m
    â”‚         â”œâ”€[34mImplication[0m
    â”‚         â”œâ”€[36mCall[0m
    â”‚         â”‚ â”œâ”€[33msend[0m
    â”‚         â”‚ â””â”€[36mArgs[0m
    â”‚         â”‚   â”œâ”€[33mf[0m
    â”‚         â”‚   â”œâ”€[33mt[0m
    â”‚         â”‚   â”œâ”€[33mm[0m
    â”‚         â”‚   â””â”€[33mc[0m
    â”‚         â””â”€[36mUnop[0m
    â”‚           â”œâ”€[34mAfter[0m
    â”‚           â””â”€[36mBinop[0m
    â”‚             â”œâ”€[34mImplication[0m
    â”‚             â”œâ”€[36mCall[0m
    â”‚             â”‚ â”œâ”€[33mreceive[0m
    â”‚             â”‚ â””â”€[36mArgs[0m
    â”‚             â”‚   â”œâ”€[33mt[0m
    â”‚             â”‚   â””â”€[33mm[0m
    â”‚             â””â”€[36mUnop[0m
    â”‚               â”œâ”€[34mAfter[0m
    â”‚               â””â”€[36mBinop[0m
    â”‚                 â”œâ”€[34mAnd[0m
    â”‚                 â”œâ”€[36mBinop[0m
    â”‚                 â”‚ â”œâ”€[34mIn[0m
    â”‚                 â”‚ â”œâ”€[33mm[0m
    â”‚                 â”‚ â””â”€[36mBinop[0m
    â”‚                 â”‚   â”œâ”€[34mJoin[0m
    â”‚                 â”‚   â”œâ”€[33mt[0m
    â”‚                 â”‚   â””â”€[33m(State.inbox)[0m
    â”‚                 â””â”€[36mBinop[0m
    â”‚                   â”œâ”€[34mEq[0m
    â”‚                   â”œâ”€[36mBinop[0m
    â”‚                   â”‚ â”œâ”€[34mJoin[0m
    â”‚                   â”‚ â”œâ”€[33mm[0m
    â”‚                   â”‚ â””â”€[33m(State.content)[0m
    â”‚                   â””â”€[33mc[0m
    â””â”€[36mPredicates and Functions[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33msend[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mUnop[0m
      â”‚ â”‚   â”œâ”€[34mNot[0m
      â”‚ â”‚   â””â”€[36mBinop[0m
      â”‚ â”‚     â”œâ”€[34mIn[0m
      â”‚ â”‚     â”œâ”€[33mm[0m
      â”‚ â”‚     â””â”€[36mBinop[0m
      â”‚ â”‚       â”œâ”€[34mJoin[0m
      â”‚ â”‚       â”œâ”€[33m_for[0m
      â”‚ â”‚       â””â”€[33m(State.inbox)[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â”œâ”€[36mParameter[0m
      â”‚ â”‚ â”‚ â”œâ”€[33mby[0m
      â”‚ â”‚ â”‚ â””â”€[32mUser[0m
      â”‚ â”‚ â”œâ”€[36mParameter[0m
      â”‚ â”‚ â”‚ â”œâ”€[33m_for[0m
      â”‚ â”‚ â”‚ â””â”€[32mUser[0m
      â”‚ â”‚ â”œâ”€[36mParameter[0m
      â”‚ â”‚ â”‚ â”œâ”€[33mm[0m
      â”‚ â”‚ â”‚ â””â”€[32mMessage[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33mc[0m
      â”‚ â”‚   â””â”€[32mContent[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.content')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mUnion[0m
      â”‚   â”‚   â”œâ”€[36mParenthesis[0m
      â”‚   â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”‚   â”œâ”€[34mDifference[0m
      â”‚   â”‚   â”‚   â”œâ”€[33m(State.content)[0m
      â”‚   â”‚   â”‚   â””â”€[36mBinop[0m
      â”‚   â”‚   â”‚     â”œâ”€[34mProduct[0m
      â”‚   â”‚   â”‚     â”œâ”€[33mm[0m
      â”‚   â”‚   â”‚     â””â”€[33mContent[0m
      â”‚   â”‚   â””â”€[33mm->c[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.to')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mUnion[0m
      â”‚   â”‚   â”œâ”€[36mParenthesis[0m
      â”‚   â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”‚   â”œâ”€[34mDifference[0m
      â”‚   â”‚   â”‚   â”œâ”€[33m(State.to)[0m
      â”‚   â”‚   â”‚   â””â”€[36mBinop[0m
      â”‚   â”‚   â”‚     â”œâ”€[34mProduct[0m
      â”‚   â”‚   â”‚     â”œâ”€[33mm[0m
      â”‚   â”‚   â”‚     â””â”€[33mUser[0m
      â”‚   â”‚   â””â”€[33mm->_for[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.from')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mUnion[0m
      â”‚   â”‚   â”œâ”€[36mParenthesis[0m
      â”‚   â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”‚   â”œâ”€[34mDifference[0m
      â”‚   â”‚   â”‚   â”œâ”€[33m(State.from)[0m
      â”‚   â”‚   â”‚   â””â”€[36mBinop[0m
      â”‚   â”‚   â”‚     â”œâ”€[34mProduct[0m
      â”‚   â”‚   â”‚     â”œâ”€[33mm[0m
      â”‚   â”‚   â”‚     â””â”€[33mUser[0m
      â”‚   â”‚   â””â”€[33mm->by[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.inbox')[0m
      â”‚     â””â”€[33m(State.inbox)[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33mreceive[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mBinop[0m
      â”‚ â”‚   â”œâ”€[34mAnd[0m
      â”‚ â”‚   â”œâ”€[36mUnop[0m
      â”‚ â”‚   â”‚ â”œâ”€[34mNot[0m
      â”‚ â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚ â”‚   â”‚   â”œâ”€[34mIn[0m
      â”‚ â”‚   â”‚   â”œâ”€[33mm[0m
      â”‚ â”‚   â”‚   â””â”€[36mBinop[0m
      â”‚ â”‚   â”‚     â”œâ”€[34mJoin[0m
      â”‚ â”‚   â”‚     â”œâ”€[33mby[0m
      â”‚ â”‚   â”‚     â””â”€[33m(State.inbox)[0m
      â”‚ â”‚   â””â”€[36mBinop[0m
      â”‚ â”‚     â”œâ”€[34mEq[0m
      â”‚ â”‚     â”œâ”€[36mBinop[0m
      â”‚ â”‚     â”‚ â”œâ”€[34mJoin[0m
      â”‚ â”‚     â”‚ â”œâ”€[33mm[0m
      â”‚ â”‚     â”‚ â””â”€[33m(State.to)[0m
      â”‚ â”‚     â””â”€[33mby[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â”œâ”€[36mParameter[0m
      â”‚ â”‚ â”‚ â”œâ”€[33mby[0m
      â”‚ â”‚ â”‚ â””â”€[32mUser[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33mm[0m
      â”‚ â”‚   â””â”€[32mMessage[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.inbox')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mUnion[0m
      â”‚   â”‚   â”œâ”€[33m(State.inbox)[0m
      â”‚   â”‚   â””â”€[33mby->m[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.from')[0m
      â”‚   â”‚ â””â”€[33m(State.from)[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.to')[0m
      â”‚   â”‚ â””â”€[33m(State.to)[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.content')[0m
      â”‚     â””â”€[33m(State.content)[0m
      â””â”€[36mPredicate[0m
        â”œâ”€[33mdelete[0m
        â”œâ”€[36mCondition[0m
        â”‚ â””â”€[36mBinop[0m
        â”‚   â”œâ”€[34mIn[0m
        â”‚   â”œâ”€[33mm[0m
        â”‚   â””â”€[36mBinop[0m
        â”‚     â”œâ”€[34mJoin[0m
        â”‚     â”œâ”€[33mu[0m
        â”‚     â””â”€[33m(State.inbox)[0m
        â”œâ”€[36mParameters[0m
        â”‚ â”œâ”€[36mParameter[0m
        â”‚ â”‚ â”œâ”€[33mu[0m
        â”‚ â”‚ â””â”€[32mUser[0m
        â”‚ â””â”€[36mParameter[0m
        â”‚   â”œâ”€[33mm[0m
        â”‚   â””â”€[32mMessage[0m
        â””â”€[36mBody[0m
          â”œâ”€[36mAssignment[0m
          â”‚ â”œâ”€[33m(State.content')[0m
          â”‚ â””â”€[36mParenthesis[0m
          â”‚   â””â”€[36mBinop[0m
          â”‚     â”œâ”€[34mDifference[0m
          â”‚     â”œâ”€[33m(State.content)[0m
          â”‚     â””â”€[36mBinop[0m
          â”‚       â”œâ”€[34mProduct[0m
          â”‚       â”œâ”€[33mm[0m
          â”‚       â””â”€[33mContent[0m
          â”œâ”€[36mAssignment[0m
          â”‚ â”œâ”€[33m(State.to')[0m
          â”‚ â””â”€[36mParenthesis[0m
          â”‚   â””â”€[36mBinop[0m
          â”‚     â”œâ”€[34mDifference[0m
          â”‚     â”œâ”€[33m(State.to)[0m
          â”‚     â””â”€[36mBinop[0m
          â”‚       â”œâ”€[34mProduct[0m
          â”‚       â”œâ”€[33mm[0m
          â”‚       â””â”€[33mUser[0m
          â”œâ”€[36mAssignment[0m
          â”‚ â”œâ”€[33m(State.from')[0m
          â”‚ â””â”€[36mParenthesis[0m
          â”‚   â””â”€[36mBinop[0m
          â”‚     â”œâ”€[34mDifference[0m
          â”‚     â”œâ”€[33m(State.from)[0m
          â”‚     â””â”€[36mBinop[0m
          â”‚       â”œâ”€[34mProduct[0m
          â”‚       â”œâ”€[33mm[0m
          â”‚       â””â”€[33mUser[0m
          â””â”€[36mAssignment[0m
            â”œâ”€[33m(State.inbox')[0m
            â””â”€[36mBinop[0m
              â”œâ”€[34mDifference[0m
              â”œâ”€[33m(State.inbox)[0m
              â””â”€[33mu->m[0m |}]
  
let %expect_test "Label Concept Alloy AST" =
  !> "label";
  [%expect {|
    [36mProgram[0m
    â”œâ”€[36mModule[0m
    â”‚ â”œâ”€[33mlabel[0m
    â”‚ â””â”€[36mParameters[0m
    â”‚   â””â”€[33mItem[0m
    â”œâ”€[36mPurpose[0m
    â”‚ â””â”€[36morganize items into overlapping categories[0m
    â”œâ”€[36mDependencies[0m
    â”œâ”€[36mSignatures[0m
    â”‚ â”œâ”€[36mSignature[0m
    â”‚ â”‚ â”œâ”€[33mState[0m
    â”‚ â”‚ â”œâ”€[34mOne [0m
    â”‚ â”‚ â””â”€[36mFields[0m
    â”‚ â”‚   â””â”€[36mField[0m
    â”‚ â”‚     â”œâ”€[33mlabels[0m
    â”‚ â”‚     â”œâ”€[32mItem -> Set Label[0m
    â”‚ â”‚     â”œâ”€[36mExpression[0m
    â”‚ â”‚     â”‚ â””â”€[36mNone[0m
    â”‚ â”‚     â””â”€[36mfalse[0m
    â”‚ â”œâ”€[36mSignature[0m
    â”‚ â”‚ â”œâ”€[33mLabel[0m
    â”‚ â”‚ â”œâ”€[36mNo Fields[0m
    â”‚ â””â”€[36mSignature[0m
    â”‚   â”œâ”€[33mItem[0m
    â”‚   â”œâ”€[36mNo Fields[0m
    â”œâ”€[36mFacts[0m
    â”œâ”€[36mAssertions[0m
    â”‚ â”œâ”€[36mAssertion[0m
    â”‚ â”‚ â”œâ”€[33m_principle0[0m
    â”‚ â”‚ â””â”€[36mQuantifier[0m
    â”‚ â”‚   â”œâ”€[34mAll[0m
    â”‚ â”‚   â”œâ”€[36mVars[0m
    â”‚ â”‚   â”‚ â”œâ”€[36mVar[0m
    â”‚ â”‚   â”‚ â”‚ â”œâ”€[33ml[0m
    â”‚ â”‚   â”‚ â”‚ â””â”€[32mLabel[0m
    â”‚ â”‚   â”‚ â””â”€[36mVar[0m
    â”‚ â”‚   â”‚   â”œâ”€[33mi[0m
    â”‚ â”‚   â”‚   â””â”€[32mItem[0m
    â”‚ â”‚   â””â”€[36mUnop[0m
    â”‚ â”‚     â”œâ”€[34mAlways[0m
    â”‚ â”‚     â””â”€[36mBinop[0m
    â”‚ â”‚       â”œâ”€[34mImplication[0m
    â”‚ â”‚       â”œâ”€[36mCall[0m
    â”‚ â”‚       â”‚ â”œâ”€[33maffix[0m
    â”‚ â”‚       â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚       â”‚   â”œâ”€[33mi[0m
    â”‚ â”‚       â”‚   â””â”€[33ml[0m
    â”‚ â”‚       â””â”€[36mUnop[0m
    â”‚ â”‚         â”œâ”€[34mAfter[0m
    â”‚ â”‚         â””â”€[36mBinop[0m
    â”‚ â”‚           â”œâ”€[34mRelease[0m
    â”‚ â”‚           â”œâ”€[36mBinop[0m
    â”‚ â”‚           â”‚ â”œâ”€[34mIn[0m
    â”‚ â”‚           â”‚ â”œâ”€[33mi[0m
    â”‚ â”‚           â”‚ â””â”€[36mCall[0m
    â”‚ â”‚           â”‚   â”œâ”€[33mfind[0m
    â”‚ â”‚           â”‚   â””â”€[36mArgs[0m
    â”‚ â”‚           â”‚     â””â”€[33ml[0m
    â”‚ â”‚           â””â”€[36mBinop[0m
    â”‚ â”‚             â”œâ”€[34mOr[0m
    â”‚ â”‚             â”œâ”€[36mCall[0m
    â”‚ â”‚             â”‚ â”œâ”€[33mdetach[0m
    â”‚ â”‚             â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚             â”‚   â”œâ”€[33mi[0m
    â”‚ â”‚             â”‚   â””â”€[33ml[0m
    â”‚ â”‚             â””â”€[36mCall[0m
    â”‚ â”‚               â”œâ”€[33mclear[0m
    â”‚ â”‚               â””â”€[36mArgs[0m
    â”‚ â”‚                 â””â”€[33mi[0m
    â”‚ â””â”€[36mAssertion[0m
    â”‚   â”œâ”€[33m_principle1[0m
    â”‚   â””â”€[36mQuantifier[0m
    â”‚     â”œâ”€[34mAll[0m
    â”‚     â”œâ”€[36mVars[0m
    â”‚     â”‚ â”œâ”€[36mVar[0m
    â”‚     â”‚ â”‚ â”œâ”€[33ml[0m
    â”‚     â”‚ â”‚ â””â”€[32mLabel[0m
    â”‚     â”‚ â””â”€[36mVar[0m
    â”‚     â”‚   â”œâ”€[33mi[0m
    â”‚     â”‚   â””â”€[32mItem[0m
    â”‚     â””â”€[36mUnop[0m
    â”‚       â”œâ”€[34mAlways[0m
    â”‚       â””â”€[36mBinop[0m
    â”‚         â”œâ”€[34mImplication[0m
    â”‚         â”œâ”€[36mUnop[0m
    â”‚         â”‚ â”œâ”€[34mHistorically[0m
    â”‚         â”‚ â””â”€[36mUnop[0m
    â”‚         â”‚   â”œâ”€[34mNot[0m
    â”‚         â”‚   â””â”€[36mBinop[0m
    â”‚         â”‚     â”œâ”€[34mOr[0m
    â”‚         â”‚     â”œâ”€[36mCall[0m
    â”‚         â”‚     â”‚ â”œâ”€[33maffix[0m
    â”‚         â”‚     â”‚ â””â”€[36mArgs[0m
    â”‚         â”‚     â”‚   â”œâ”€[33mi[0m
    â”‚         â”‚     â”‚   â””â”€[33ml[0m
    â”‚         â”‚     â””â”€[36mCall[0m
    â”‚         â”‚       â”œâ”€[33mdetach[0m
    â”‚         â”‚       â””â”€[36mArgs[0m
    â”‚         â”‚         â”œâ”€[33mi[0m
    â”‚         â”‚         â””â”€[33ml[0m
    â”‚         â””â”€[36mUnop[0m
    â”‚           â”œâ”€[34mAfter[0m
    â”‚           â””â”€[36mUnop[0m
    â”‚             â”œâ”€[34mNot[0m
    â”‚             â””â”€[36mBinop[0m
    â”‚               â”œâ”€[34mIn[0m
    â”‚               â”œâ”€[33mi[0m
    â”‚               â””â”€[36mCall[0m
    â”‚                 â”œâ”€[33mfind[0m
    â”‚                 â””â”€[36mArgs[0m
    â”‚                   â””â”€[33ml[0m
    â””â”€[36mPredicates and Functions[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33maffix[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mNone[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â”œâ”€[36mParameter[0m
      â”‚ â”‚ â”‚ â”œâ”€[33mi[0m
      â”‚ â”‚ â”‚ â””â”€[32mItem[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33ml[0m
      â”‚ â”‚   â””â”€[32mLabel[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.labels')[0m
      â”‚     â””â”€[36mBinop[0m
      â”‚       â”œâ”€[34mUnion[0m
      â”‚       â”œâ”€[33m(State.labels)[0m
      â”‚       â””â”€[33mi->l[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33mdetach[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mNone[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â”œâ”€[36mParameter[0m
      â”‚ â”‚ â”‚ â”œâ”€[33mi[0m
      â”‚ â”‚ â”‚ â””â”€[32mItem[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33ml[0m
      â”‚ â”‚   â””â”€[32mLabel[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.labels')[0m
      â”‚     â””â”€[36mBinop[0m
      â”‚       â”œâ”€[34mDifference[0m
      â”‚       â”œâ”€[33m(State.labels)[0m
      â”‚       â””â”€[33mi->l[0m
      â”œâ”€[36mFunction[0m
      â”‚ â”œâ”€[33mfind[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mNone[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33ml[0m
      â”‚ â”‚   â””â”€[32mLabel[0m
      â”‚ â”œâ”€[32mItem[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â””â”€[36mBinop[0m
      â”‚     â”œâ”€[34mJoin[0m
      â”‚     â”œâ”€[33ml[0m
      â”‚     â””â”€[36mUnop[0m
      â”‚       â”œâ”€[34mTilde[0m
      â”‚       â””â”€[33m(State.labels)[0m
      â””â”€[36mPredicate[0m
        â”œâ”€[33mclear[0m
        â”œâ”€[36mCondition[0m
        â”‚ â””â”€[36mNone[0m
        â”œâ”€[36mParameters[0m
        â”‚ â””â”€[36mParameter[0m
        â”‚   â”œâ”€[33mi[0m
        â”‚   â””â”€[32mItem[0m
        â””â”€[36mBody[0m
          â””â”€[36mAssignment[0m
            â”œâ”€[33m(State.labels')[0m
            â””â”€[36mParenthesis[0m
              â””â”€[36mBinop[0m
                â”œâ”€[34mDifference[0m
                â”œâ”€[33m(State.labels)[0m
                â””â”€[36mBinop[0m
                  â”œâ”€[34mProduct[0m
                  â”œâ”€[33mi[0m
                  â””â”€[33mLabel[0m |}]

let %expect_test "Style Concept Alloy AST" = 
  !> "style";
  [%expect {|
    [36mProgram[0m
    â”œâ”€[36mModule[0m
    â”‚ â”œâ”€[33mstyle[0m
    â”‚ â””â”€[36mParameters[0m
    â”‚   â”œâ”€[33mElement[0m
    â”‚   â””â”€[33mFormat[0m
    â”œâ”€[36mPurpose[0m
    â”‚ â””â”€[36measing consistent formatting of elements[0m
    â”œâ”€[36mDependencies[0m
    â”œâ”€[36mSignatures[0m
    â”‚ â”œâ”€[36mSignature[0m
    â”‚ â”‚ â”œâ”€[33mState[0m
    â”‚ â”‚ â”œâ”€[34mOne [0m
    â”‚ â”‚ â””â”€[36mFields[0m
    â”‚ â”‚   â”œâ”€[36mField[0m
    â”‚ â”‚   â”‚ â”œâ”€[33massigned[0m
    â”‚ â”‚   â”‚ â”œâ”€[32mElement -> Lone Style[0m
    â”‚ â”‚   â”‚ â”œâ”€[36mExpression[0m
    â”‚ â”‚   â”‚ â”‚ â””â”€[36mNone[0m
    â”‚ â”‚   â”‚ â””â”€[36mfalse[0m
    â”‚ â”‚   â”œâ”€[36mField[0m
    â”‚ â”‚   â”‚ â”œâ”€[33mdefined[0m
    â”‚ â”‚   â”‚ â”œâ”€[32mStyle -> Lone Format[0m
    â”‚ â”‚   â”‚ â”œâ”€[36mExpression[0m
    â”‚ â”‚   â”‚ â”‚ â””â”€[36mNone[0m
    â”‚ â”‚   â”‚ â””â”€[36mfalse[0m
    â”‚ â”‚   â””â”€[36mField[0m
    â”‚ â”‚     â”œâ”€[33mformat[0m
    â”‚ â”‚     â”œâ”€[32mElement -> Lone Format[0m
    â”‚ â”‚     â”œâ”€[36mExpression[0m
    â”‚ â”‚     â”‚ â””â”€[36mNone[0m
    â”‚ â”‚     â””â”€[36mfalse[0m
    â”‚ â”œâ”€[36mSignature[0m
    â”‚ â”‚ â”œâ”€[33mStyle[0m
    â”‚ â”‚ â”œâ”€[36mNo Fields[0m
    â”‚ â”œâ”€[36mSignature[0m
    â”‚ â”‚ â”œâ”€[33mFormat[0m
    â”‚ â”‚ â”œâ”€[36mNo Fields[0m
    â”‚ â””â”€[36mSignature[0m
    â”‚   â”œâ”€[33mElement[0m
    â”‚   â”œâ”€[36mNo Fields[0m
    â”œâ”€[36mFacts[0m
    â”‚ â””â”€[36mFact[0m
    â”‚   â”œâ”€[33mformat[0m
    â”‚   â””â”€[36mUnop[0m
    â”‚     â”œâ”€[34mAlways[0m
    â”‚     â””â”€[36mAssignment[0m
    â”‚       â”œâ”€[33m(State.format)[0m
    â”‚       â””â”€[36mBinop[0m
    â”‚         â”œâ”€[34mJoin[0m
    â”‚         â”œâ”€[33m(State.assigned)[0m
    â”‚         â””â”€[33m(State.defined)[0m
    â”œâ”€[36mAssertions[0m
    â”‚ â””â”€[36mAssertion[0m
    â”‚   â”œâ”€[33m_principle0[0m
    â”‚   â””â”€[36mQuantifier[0m
    â”‚     â”œâ”€[34mAll[0m
    â”‚     â”œâ”€[36mVars[0m
    â”‚     â”‚ â”œâ”€[36mVar[0m
    â”‚     â”‚ â”‚ â”œâ”€[33mf2[0m
    â”‚     â”‚ â”‚ â””â”€[32mFormat[0m
    â”‚     â”‚ â”œâ”€[36mVar[0m
    â”‚     â”‚ â”‚ â”œâ”€[33me2[0m
    â”‚     â”‚ â”‚ â””â”€[32mElement[0m
    â”‚     â”‚ â”œâ”€[36mVar[0m
    â”‚     â”‚ â”‚ â”œâ”€[33me1[0m
    â”‚     â”‚ â”‚ â””â”€[32mElement[0m
    â”‚     â”‚ â”œâ”€[36mVar[0m
    â”‚     â”‚ â”‚ â”œâ”€[33mf1[0m
    â”‚     â”‚ â”‚ â””â”€[32mFormat[0m
    â”‚     â”‚ â””â”€[36mVar[0m
    â”‚     â”‚   â”œâ”€[33ms[0m
    â”‚     â”‚   â””â”€[32mStyle[0m
    â”‚     â””â”€[36mUnop[0m
    â”‚       â”œâ”€[34mAlways[0m
    â”‚       â””â”€[36mBinop[0m
    â”‚         â”œâ”€[34mImplication[0m
    â”‚         â”œâ”€[36mCall[0m
    â”‚         â”‚ â”œâ”€[33mdefine[0m
    â”‚         â”‚ â””â”€[36mArgs[0m
    â”‚         â”‚   â”œâ”€[33ms[0m
    â”‚         â”‚   â””â”€[33mf1[0m
    â”‚         â””â”€[36mUnop[0m
    â”‚           â”œâ”€[34mAfter[0m
    â”‚           â””â”€[36mBinop[0m
    â”‚             â”œâ”€[34mImplication[0m
    â”‚             â”œâ”€[36mCall[0m
    â”‚             â”‚ â”œâ”€[33massign[0m
    â”‚             â”‚ â””â”€[36mArgs[0m
    â”‚             â”‚   â”œâ”€[33me1[0m
    â”‚             â”‚   â””â”€[33ms[0m
    â”‚             â””â”€[36mUnop[0m
    â”‚               â”œâ”€[34mAfter[0m
    â”‚               â””â”€[36mBinop[0m
    â”‚                 â”œâ”€[34mImplication[0m
    â”‚                 â”œâ”€[36mCall[0m
    â”‚                 â”‚ â”œâ”€[33massign[0m
    â”‚                 â”‚ â””â”€[36mArgs[0m
    â”‚                 â”‚   â”œâ”€[33me2[0m
    â”‚                 â”‚   â””â”€[33ms[0m
    â”‚                 â””â”€[36mUnop[0m
    â”‚                   â”œâ”€[34mAfter[0m
    â”‚                   â””â”€[36mBinop[0m
    â”‚                     â”œâ”€[34mImplication[0m
    â”‚                     â”œâ”€[36mCall[0m
    â”‚                     â”‚ â”œâ”€[33mdefine[0m
    â”‚                     â”‚ â””â”€[36mArgs[0m
    â”‚                     â”‚   â”œâ”€[33ms[0m
    â”‚                     â”‚   â””â”€[33mf2[0m
    â”‚                     â””â”€[36mUnop[0m
    â”‚                       â”œâ”€[34mAfter[0m
    â”‚                       â””â”€[36mBinop[0m
    â”‚                         â”œâ”€[34mAnd[0m
    â”‚                         â”œâ”€[36mBinop[0m
    â”‚                         â”‚ â”œâ”€[34mEq[0m
    â”‚                         â”‚ â”œâ”€[36mBinop[0m
    â”‚                         â”‚ â”‚ â”œâ”€[34mJoin[0m
    â”‚                         â”‚ â”‚ â”œâ”€[33me1[0m
    â”‚                         â”‚ â”‚ â””â”€[33m(State.format)[0m
    â”‚                         â”‚ â””â”€[33mf2[0m
    â”‚                         â””â”€[36mBinop[0m
    â”‚                           â”œâ”€[34mEq[0m
    â”‚                           â”œâ”€[36mBinop[0m
    â”‚                           â”‚ â”œâ”€[34mJoin[0m
    â”‚                           â”‚ â”œâ”€[33me2[0m
    â”‚                           â”‚ â””â”€[33m(State.format)[0m
    â”‚                           â””â”€[33mf2[0m
    â””â”€[36mPredicates and Functions[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33massign[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mNone[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â”œâ”€[36mParameter[0m
      â”‚ â”‚ â”‚ â”œâ”€[33me[0m
      â”‚ â”‚ â”‚ â””â”€[32mElement[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33ms[0m
      â”‚ â”‚   â””â”€[32mStyle[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.assigned')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mUnion[0m
      â”‚   â”‚   â”œâ”€[36mParenthesis[0m
      â”‚   â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”‚   â”œâ”€[34mDifference[0m
      â”‚   â”‚   â”‚   â”œâ”€[33m(State.assigned)[0m
      â”‚   â”‚   â”‚   â””â”€[36mBinop[0m
      â”‚   â”‚   â”‚     â”œâ”€[34mProduct[0m
      â”‚   â”‚   â”‚     â”œâ”€[33me[0m
      â”‚   â”‚   â”‚     â””â”€[33mStyle[0m
      â”‚   â”‚   â””â”€[33me->s[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.defined')[0m
      â”‚     â””â”€[33m(State.defined)[0m
      â””â”€[36mPredicate[0m
        â”œâ”€[33mdefine[0m
        â”œâ”€[36mCondition[0m
        â”‚ â””â”€[36mNone[0m
        â”œâ”€[36mParameters[0m
        â”‚ â”œâ”€[36mParameter[0m
        â”‚ â”‚ â”œâ”€[33ms[0m
        â”‚ â”‚ â””â”€[32mStyle[0m
        â”‚ â””â”€[36mParameter[0m
        â”‚   â”œâ”€[33mf[0m
        â”‚   â””â”€[32mFormat[0m
        â””â”€[36mBody[0m
          â”œâ”€[36mAssignment[0m
          â”‚ â”œâ”€[33m(State.defined')[0m
          â”‚ â””â”€[36mBinop[0m
          â”‚   â”œâ”€[34mUnion[0m
          â”‚   â”œâ”€[36mParenthesis[0m
          â”‚   â”‚ â””â”€[36mBinop[0m
          â”‚   â”‚   â”œâ”€[34mDifference[0m
          â”‚   â”‚   â”œâ”€[33m(State.defined)[0m
          â”‚   â”‚   â””â”€[36mBinop[0m
          â”‚   â”‚     â”œâ”€[34mProduct[0m
          â”‚   â”‚     â”œâ”€[33ms[0m
          â”‚   â”‚     â””â”€[33mFormat[0m
          â”‚   â””â”€[33ms->f[0m
          â””â”€[36mAssignment[0m
            â”œâ”€[33m(State.assigned')[0m
            â””â”€[33m(State.assigned)[0m |}]

let %expect_test "Todo Concept Alloy AST" = 
  !> "todo";
  [%expect {|
    [36mProgram[0m
    â”œâ”€[36mModule[0m
    â”‚ â”œâ”€[33mtodo[0m
    â”‚ â””â”€[36mNo Parameters[0m
    â”œâ”€[36mPurpose[0m
    â”‚ â””â”€[36mkeep track of tasks[0m
    â”œâ”€[36mDependencies[0m
    â”œâ”€[36mSignatures[0m
    â”‚ â”œâ”€[36mSignature[0m
    â”‚ â”‚ â”œâ”€[33mState[0m
    â”‚ â”‚ â”œâ”€[34mOne [0m
    â”‚ â”‚ â””â”€[36mFields[0m
    â”‚ â”‚   â”œâ”€[36mField[0m
    â”‚ â”‚   â”‚ â”œâ”€[33mdone[0m
    â”‚ â”‚   â”‚ â”œâ”€[32mSet Task[0m
    â”‚ â”‚   â”‚ â”œâ”€[36mExpression[0m
    â”‚ â”‚   â”‚ â”‚ â””â”€[36mNone[0m
    â”‚ â”‚   â”‚ â””â”€[36mfalse[0m
    â”‚ â”‚   â””â”€[36mField[0m
    â”‚ â”‚     â”œâ”€[33mpending[0m
    â”‚ â”‚     â”œâ”€[32mSet Task[0m
    â”‚ â”‚     â”œâ”€[36mExpression[0m
    â”‚ â”‚     â”‚ â””â”€[36mNone[0m
    â”‚ â”‚     â””â”€[36mfalse[0m
    â”‚ â””â”€[36mSignature[0m
    â”‚   â”œâ”€[33mTask[0m
    â”‚   â”œâ”€[36mNo Fields[0m
    â”œâ”€[36mFacts[0m
    â”œâ”€[36mAssertions[0m
    â”‚ â”œâ”€[36mAssertion[0m
    â”‚ â”‚ â”œâ”€[33m_principle0[0m
    â”‚ â”‚ â””â”€[36mQuantifier[0m
    â”‚ â”‚   â”œâ”€[34mAll[0m
    â”‚ â”‚   â”œâ”€[36mVars[0m
    â”‚ â”‚   â”‚ â””â”€[36mVar[0m
    â”‚ â”‚   â”‚   â”œâ”€[33mt[0m
    â”‚ â”‚   â”‚   â””â”€[32mTask[0m
    â”‚ â”‚   â””â”€[36mUnop[0m
    â”‚ â”‚     â”œâ”€[34mAlways[0m
    â”‚ â”‚     â””â”€[36mBinop[0m
    â”‚ â”‚       â”œâ”€[34mImplication[0m
    â”‚ â”‚       â”œâ”€[36mCall[0m
    â”‚ â”‚       â”‚ â”œâ”€[33madd[0m
    â”‚ â”‚       â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚       â”‚   â””â”€[33mt[0m
    â”‚ â”‚       â””â”€[36mUnop[0m
    â”‚ â”‚         â”œâ”€[34mAfter[0m
    â”‚ â”‚         â””â”€[36mBinop[0m
    â”‚ â”‚           â”œâ”€[34mRelease[0m
    â”‚ â”‚           â”œâ”€[36mBinop[0m
    â”‚ â”‚           â”‚ â”œâ”€[34mIn[0m
    â”‚ â”‚           â”‚ â”œâ”€[33mt[0m
    â”‚ â”‚           â”‚ â””â”€[33m(State.pending)[0m
    â”‚ â”‚           â””â”€[36mBinop[0m
    â”‚ â”‚             â”œâ”€[34mOr[0m
    â”‚ â”‚             â”œâ”€[36mCall[0m
    â”‚ â”‚             â”‚ â”œâ”€[33mdelete[0m
    â”‚ â”‚             â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚             â”‚   â””â”€[33mt[0m
    â”‚ â”‚             â””â”€[36mCall[0m
    â”‚ â”‚               â”œâ”€[33mcomplete[0m
    â”‚ â”‚               â””â”€[36mArgs[0m
    â”‚ â”‚                 â””â”€[33mt[0m
    â”‚ â””â”€[36mAssertion[0m
    â”‚   â”œâ”€[33m_principle1[0m
    â”‚   â””â”€[36mQuantifier[0m
    â”‚     â”œâ”€[34mAll[0m
    â”‚     â”œâ”€[36mVars[0m
    â”‚     â”‚ â””â”€[36mVar[0m
    â”‚     â”‚   â”œâ”€[33mt[0m
    â”‚     â”‚   â””â”€[32mTask[0m
    â”‚     â””â”€[36mUnop[0m
    â”‚       â”œâ”€[34mAlways[0m
    â”‚       â””â”€[36mBinop[0m
    â”‚         â”œâ”€[34mImplication[0m
    â”‚         â”œâ”€[36mCall[0m
    â”‚         â”‚ â”œâ”€[33mcomplete[0m
    â”‚         â”‚ â””â”€[36mArgs[0m
    â”‚         â”‚   â””â”€[33mt[0m
    â”‚         â””â”€[36mUnop[0m
    â”‚           â”œâ”€[34mAfter[0m
    â”‚           â””â”€[36mBinop[0m
    â”‚             â”œâ”€[34mRelease[0m
    â”‚             â”œâ”€[36mBinop[0m
    â”‚             â”‚ â”œâ”€[34mIn[0m
    â”‚             â”‚ â”œâ”€[33mt[0m
    â”‚             â”‚ â””â”€[33m(State.done)[0m
    â”‚             â””â”€[36mCall[0m
    â”‚               â”œâ”€[33mdelete[0m
    â”‚               â””â”€[36mArgs[0m
    â”‚                 â””â”€[33mt[0m
    â””â”€[36mPredicates and Functions[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33madd[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mUnop[0m
      â”‚ â”‚   â”œâ”€[34mNot[0m
      â”‚ â”‚   â””â”€[36mBinop[0m
      â”‚ â”‚     â”œâ”€[34mIn[0m
      â”‚ â”‚     â”œâ”€[33mt[0m
      â”‚ â”‚     â””â”€[36mBinop[0m
      â”‚ â”‚       â”œâ”€[34mUnion[0m
      â”‚ â”‚       â”œâ”€[33m(State.done)[0m
      â”‚ â”‚       â””â”€[33m(State.pending)[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33mt[0m
      â”‚ â”‚   â””â”€[32mTask[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.pending')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mUnion[0m
      â”‚   â”‚   â”œâ”€[33m(State.pending)[0m
      â”‚   â”‚   â””â”€[33mt[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.done')[0m
      â”‚     â””â”€[33m(State.done)[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33mdelete[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mBinop[0m
      â”‚ â”‚   â”œâ”€[34mIn[0m
      â”‚ â”‚   â”œâ”€[33mt[0m
      â”‚ â”‚   â””â”€[36mBinop[0m
      â”‚ â”‚     â”œâ”€[34mUnion[0m
      â”‚ â”‚     â”œâ”€[33m(State.done)[0m
      â”‚ â”‚     â””â”€[33m(State.pending)[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33mt[0m
      â”‚ â”‚   â””â”€[32mTask[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.pending')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mDifference[0m
      â”‚   â”‚   â”œâ”€[33m(State.pending)[0m
      â”‚   â”‚   â””â”€[33mt[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.done')[0m
      â”‚     â””â”€[36mBinop[0m
      â”‚       â”œâ”€[34mDifference[0m
      â”‚       â”œâ”€[33m(State.done)[0m
      â”‚       â””â”€[33mt[0m
      â””â”€[36mPredicate[0m
        â”œâ”€[33mcomplete[0m
        â”œâ”€[36mCondition[0m
        â”‚ â””â”€[36mBinop[0m
        â”‚   â”œâ”€[34mIn[0m
        â”‚   â”œâ”€[33mt[0m
        â”‚   â””â”€[33m(State.pending)[0m
        â”œâ”€[36mParameters[0m
        â”‚ â””â”€[36mParameter[0m
        â”‚   â”œâ”€[33mt[0m
        â”‚   â””â”€[32mTask[0m
        â””â”€[36mBody[0m
          â”œâ”€[36mAssignment[0m
          â”‚ â”œâ”€[33m(State.pending')[0m
          â”‚ â””â”€[36mBinop[0m
          â”‚   â”œâ”€[34mDifference[0m
          â”‚   â”œâ”€[33m(State.pending)[0m
          â”‚   â””â”€[33mt[0m
          â””â”€[36mAssignment[0m
            â”œâ”€[33m(State.done')[0m
            â””â”€[36mBinop[0m
              â”œâ”€[34mUnion[0m
              â”œâ”€[33m(State.done)[0m
              â””â”€[33mt[0m |}]
  
let %expect_test "Upvote Concept Alloy AST" = 
  !> "upvote";
  [%expect {|
    [36mProgram[0m
    â”œâ”€[36mModule[0m
    â”‚ â”œâ”€[33mupvote[0m
    â”‚ â””â”€[36mParameters[0m
    â”‚   â”œâ”€[33mItem[0m
    â”‚   â””â”€[33mUser[0m
    â”œâ”€[36mPurpose[0m
    â”‚ â””â”€[36mgauge user sentiment of items[0m
    â”œâ”€[36mDependencies[0m
    â”œâ”€[36mSignatures[0m
    â”‚ â”œâ”€[36mSignature[0m
    â”‚ â”‚ â”œâ”€[33mState[0m
    â”‚ â”‚ â”œâ”€[34mOne [0m
    â”‚ â”‚ â””â”€[36mFields[0m
    â”‚ â”‚   â”œâ”€[36mField[0m
    â”‚ â”‚   â”‚ â”œâ”€[33mupvotes[0m
    â”‚ â”‚   â”‚ â”œâ”€[32mItem -> Set User[0m
    â”‚ â”‚   â”‚ â”œâ”€[36mExpression[0m
    â”‚ â”‚   â”‚ â”‚ â””â”€[36mNone[0m
    â”‚ â”‚   â”‚ â””â”€[36mfalse[0m
    â”‚ â”‚   â””â”€[36mField[0m
    â”‚ â”‚     â”œâ”€[33mdownvotes[0m
    â”‚ â”‚     â”œâ”€[32mItem -> Set User[0m
    â”‚ â”‚     â”œâ”€[36mExpression[0m
    â”‚ â”‚     â”‚ â””â”€[36mNone[0m
    â”‚ â”‚     â””â”€[36mfalse[0m
    â”‚ â”œâ”€[36mSignature[0m
    â”‚ â”‚ â”œâ”€[33mUser[0m
    â”‚ â”‚ â”œâ”€[36mNo Fields[0m
    â”‚ â””â”€[36mSignature[0m
    â”‚   â”œâ”€[33mItem[0m
    â”‚   â”œâ”€[36mNo Fields[0m
    â”œâ”€[36mFacts[0m
    â”œâ”€[36mAssertions[0m
    â”‚ â”œâ”€[36mAssertion[0m
    â”‚ â”‚ â”œâ”€[33m_principle0[0m
    â”‚ â”‚ â””â”€[36mQuantifier[0m
    â”‚ â”‚   â”œâ”€[34mAll[0m
    â”‚ â”‚   â”œâ”€[36mVars[0m
    â”‚ â”‚   â”‚ â”œâ”€[36mVar[0m
    â”‚ â”‚   â”‚ â”‚ â”œâ”€[33mu[0m
    â”‚ â”‚   â”‚ â”‚ â””â”€[32mUser[0m
    â”‚ â”‚   â”‚ â””â”€[36mVar[0m
    â”‚ â”‚   â”‚   â”œâ”€[33mi[0m
    â”‚ â”‚   â”‚   â””â”€[32mItem[0m
    â”‚ â”‚   â””â”€[36mUnop[0m
    â”‚ â”‚     â”œâ”€[34mAlways[0m
    â”‚ â”‚     â””â”€[36mBinop[0m
    â”‚ â”‚       â”œâ”€[34mImplication[0m
    â”‚ â”‚       â”œâ”€[36mBinop[0m
    â”‚ â”‚       â”‚ â”œâ”€[34mOr[0m
    â”‚ â”‚       â”‚ â”œâ”€[36mCall[0m
    â”‚ â”‚       â”‚ â”‚ â”œâ”€[33mupvote[0m
    â”‚ â”‚       â”‚ â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚       â”‚ â”‚   â”œâ”€[33mi[0m
    â”‚ â”‚       â”‚ â”‚   â””â”€[33mu[0m
    â”‚ â”‚       â”‚ â””â”€[36mCall[0m
    â”‚ â”‚       â”‚   â”œâ”€[33mdownvote[0m
    â”‚ â”‚       â”‚   â””â”€[36mArgs[0m
    â”‚ â”‚       â”‚     â”œâ”€[33mi[0m
    â”‚ â”‚       â”‚     â””â”€[33mu[0m
    â”‚ â”‚       â””â”€[36mUnop[0m
    â”‚ â”‚         â”œâ”€[34mAfter[0m
    â”‚ â”‚         â””â”€[36mCall[0m
    â”‚ â”‚           â”œâ”€[33m_can_unvote[0m
    â”‚ â”‚           â””â”€[36mArgs[0m
    â”‚ â”‚             â”œâ”€[33mi[0m
    â”‚ â”‚             â””â”€[33mu[0m
    â”‚ â”œâ”€[36mAssertion[0m
    â”‚ â”‚ â”œâ”€[33m_principle1[0m
    â”‚ â”‚ â””â”€[36mQuantifier[0m
    â”‚ â”‚   â”œâ”€[34mAll[0m
    â”‚ â”‚   â”œâ”€[36mVars[0m
    â”‚ â”‚   â”‚ â”œâ”€[36mVar[0m
    â”‚ â”‚   â”‚ â”‚ â”œâ”€[33mu[0m
    â”‚ â”‚   â”‚ â”‚ â””â”€[32mUser[0m
    â”‚ â”‚   â”‚ â””â”€[36mVar[0m
    â”‚ â”‚   â”‚   â”œâ”€[33mi[0m
    â”‚ â”‚   â”‚   â””â”€[32mItem[0m
    â”‚ â”‚   â””â”€[36mUnop[0m
    â”‚ â”‚     â”œâ”€[34mAlways[0m
    â”‚ â”‚     â””â”€[36mBinop[0m
    â”‚ â”‚       â”œâ”€[34mImplication[0m
    â”‚ â”‚       â”œâ”€[36mCall[0m
    â”‚ â”‚       â”‚ â”œâ”€[33mupvote[0m
    â”‚ â”‚       â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚       â”‚   â”œâ”€[33mi[0m
    â”‚ â”‚       â”‚   â””â”€[33mu[0m
    â”‚ â”‚       â””â”€[36mUnop[0m
    â”‚ â”‚         â”œâ”€[34mAfter[0m
    â”‚ â”‚         â””â”€[36mBinop[0m
    â”‚ â”‚           â”œâ”€[34mRelease[0m
    â”‚ â”‚           â”œâ”€[36mUnop[0m
    â”‚ â”‚           â”‚ â”œâ”€[34mNot[0m
    â”‚ â”‚           â”‚ â””â”€[36mCall[0m
    â”‚ â”‚           â”‚   â”œâ”€[33m_can_upvote[0m
    â”‚ â”‚           â”‚   â””â”€[36mArgs[0m
    â”‚ â”‚           â”‚     â”œâ”€[33mi[0m
    â”‚ â”‚           â”‚     â””â”€[33mu[0m
    â”‚ â”‚           â””â”€[36mBinop[0m
    â”‚ â”‚             â”œâ”€[34mOr[0m
    â”‚ â”‚             â”œâ”€[36mCall[0m
    â”‚ â”‚             â”‚ â”œâ”€[33munvote[0m
    â”‚ â”‚             â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚             â”‚   â”œâ”€[33mi[0m
    â”‚ â”‚             â”‚   â””â”€[33mu[0m
    â”‚ â”‚             â””â”€[36mCall[0m
    â”‚ â”‚               â”œâ”€[33mdownvote[0m
    â”‚ â”‚               â””â”€[36mArgs[0m
    â”‚ â”‚                 â”œâ”€[33mi[0m
    â”‚ â”‚                 â””â”€[33mu[0m
    â”‚ â””â”€[36mAssertion[0m
    â”‚   â”œâ”€[33m_principle2[0m
    â”‚   â””â”€[36mQuantifier[0m
    â”‚     â”œâ”€[34mAll[0m
    â”‚     â”œâ”€[36mVars[0m
    â”‚     â”‚ â”œâ”€[36mVar[0m
    â”‚     â”‚ â”‚ â”œâ”€[33mu[0m
    â”‚     â”‚ â”‚ â””â”€[32mUser[0m
    â”‚     â”‚ â””â”€[36mVar[0m
    â”‚     â”‚   â”œâ”€[33mi[0m
    â”‚     â”‚   â””â”€[32mItem[0m
    â”‚     â””â”€[36mUnop[0m
    â”‚       â”œâ”€[34mAlways[0m
    â”‚       â””â”€[36mBinop[0m
    â”‚         â”œâ”€[34mImplication[0m
    â”‚         â”œâ”€[36mCall[0m
    â”‚         â”‚ â”œâ”€[33mdownvote[0m
    â”‚         â”‚ â””â”€[36mArgs[0m
    â”‚         â”‚   â”œâ”€[33mi[0m
    â”‚         â”‚   â””â”€[33mu[0m
    â”‚         â””â”€[36mUnop[0m
    â”‚           â”œâ”€[34mAfter[0m
    â”‚           â””â”€[36mBinop[0m
    â”‚             â”œâ”€[34mRelease[0m
    â”‚             â”œâ”€[36mUnop[0m
    â”‚             â”‚ â”œâ”€[34mNot[0m
    â”‚             â”‚ â””â”€[36mCall[0m
    â”‚             â”‚   â”œâ”€[33m_can_downvote[0m
    â”‚             â”‚   â””â”€[36mArgs[0m
    â”‚             â”‚     â”œâ”€[33mi[0m
    â”‚             â”‚     â””â”€[33mu[0m
    â”‚             â””â”€[36mBinop[0m
    â”‚               â”œâ”€[34mOr[0m
    â”‚               â”œâ”€[36mCall[0m
    â”‚               â”‚ â”œâ”€[33munvote[0m
    â”‚               â”‚ â””â”€[36mArgs[0m
    â”‚               â”‚   â”œâ”€[33mi[0m
    â”‚               â”‚   â””â”€[33mu[0m
    â”‚               â””â”€[36mCall[0m
    â”‚                 â”œâ”€[33mupvote[0m
    â”‚                 â””â”€[36mArgs[0m
    â”‚                   â”œâ”€[33mi[0m
    â”‚                   â””â”€[33mu[0m
    â””â”€[36mPredicates and Functions[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33mupvote[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mUnop[0m
      â”‚ â”‚   â”œâ”€[34mNot[0m
      â”‚ â”‚   â””â”€[36mBinop[0m
      â”‚ â”‚     â”œâ”€[34mIn[0m
      â”‚ â”‚     â”œâ”€[33mu[0m
      â”‚ â”‚     â””â”€[36mBinop[0m
      â”‚ â”‚       â”œâ”€[34mJoin[0m
      â”‚ â”‚       â”œâ”€[33mi[0m
      â”‚ â”‚       â””â”€[33m(State.upvotes)[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â”œâ”€[36mParameter[0m
      â”‚ â”‚ â”‚ â”œâ”€[33mi[0m
      â”‚ â”‚ â”‚ â””â”€[32mItem[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33mu[0m
      â”‚ â”‚   â””â”€[32mUser[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.downvotes')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mDifference[0m
      â”‚   â”‚   â”œâ”€[33m(State.downvotes)[0m
      â”‚   â”‚   â””â”€[33mi->u[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.upvotes')[0m
      â”‚     â””â”€[36mBinop[0m
      â”‚       â”œâ”€[34mUnion[0m
      â”‚       â”œâ”€[33m(State.upvotes)[0m
      â”‚       â””â”€[33mi->u[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33mdownvote[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mUnop[0m
      â”‚ â”‚   â”œâ”€[34mNot[0m
      â”‚ â”‚   â””â”€[36mBinop[0m
      â”‚ â”‚     â”œâ”€[34mIn[0m
      â”‚ â”‚     â”œâ”€[33mu[0m
      â”‚ â”‚     â””â”€[36mBinop[0m
      â”‚ â”‚       â”œâ”€[34mJoin[0m
      â”‚ â”‚       â”œâ”€[33mi[0m
      â”‚ â”‚       â””â”€[33m(State.downvotes)[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â”œâ”€[36mParameter[0m
      â”‚ â”‚ â”‚ â”œâ”€[33mi[0m
      â”‚ â”‚ â”‚ â””â”€[32mItem[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33mu[0m
      â”‚ â”‚   â””â”€[32mUser[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.downvotes')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mUnion[0m
      â”‚   â”‚   â”œâ”€[33m(State.downvotes)[0m
      â”‚   â”‚   â””â”€[33mi->u[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.upvotes')[0m
      â”‚     â””â”€[36mBinop[0m
      â”‚       â”œâ”€[34mDifference[0m
      â”‚       â”œâ”€[33m(State.upvotes)[0m
      â”‚       â””â”€[33mi->u[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33munvote[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mBinop[0m
      â”‚ â”‚   â”œâ”€[34mIn[0m
      â”‚ â”‚   â”œâ”€[33mu[0m
      â”‚ â”‚   â””â”€[36mBinop[0m
      â”‚ â”‚     â”œâ”€[34mJoin[0m
      â”‚ â”‚     â”œâ”€[33mi[0m
      â”‚ â”‚     â””â”€[36mBinop[0m
      â”‚ â”‚       â”œâ”€[34mUnion[0m
      â”‚ â”‚       â”œâ”€[33m(State.upvotes)[0m
      â”‚ â”‚       â””â”€[33m(State.downvotes)[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â”œâ”€[36mParameter[0m
      â”‚ â”‚ â”‚ â”œâ”€[33mi[0m
      â”‚ â”‚ â”‚ â””â”€[32mItem[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33mu[0m
      â”‚ â”‚   â””â”€[32mUser[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.downvotes')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mDifference[0m
      â”‚   â”‚   â”œâ”€[33m(State.downvotes)[0m
      â”‚   â”‚   â””â”€[33mi->u[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.upvotes')[0m
      â”‚     â””â”€[36mBinop[0m
      â”‚       â”œâ”€[34mDifference[0m
      â”‚       â”œâ”€[33m(State.upvotes)[0m
      â”‚       â””â”€[33mi->u[0m
      â””â”€[36mFunction[0m
        â”œâ”€[33mcount[0m
        â”œâ”€[36mCondition[0m
        â”‚ â””â”€[36mNone[0m
        â”œâ”€[36mParameters[0m
        â”‚ â””â”€[36mParameter[0m
        â”‚   â”œâ”€[33mi[0m
        â”‚   â””â”€[32mItem[0m
        â”œâ”€[32mInt[0m
        â””â”€[36mBody[0m
          â””â”€[36mBinop[0m
            â”œâ”€[34mSub[0m
            â”œâ”€[36mUnop[0m
            â”‚ â”œâ”€[34mCard[0m
            â”‚ â””â”€[36mBinop[0m
            â”‚   â”œâ”€[34mJoin[0m
            â”‚   â”œâ”€[33mi[0m
            â”‚   â””â”€[33m(State.upvotes)[0m
            â””â”€[36mUnop[0m
              â”œâ”€[34mCard[0m
              â””â”€[36mBinop[0m
                â”œâ”€[34mJoin[0m
                â”œâ”€[33mi[0m
                â””â”€[33m(State.downvotes)[0m |}]
  
let %expect_test "Todo-Label App Alloy AST" = 
  !> "todo-label";
  [%expect {|
    [36mProgram[0m
    â”œâ”€[36mModule[0m
    â”‚ â”œâ”€[33mlabel[0m
    â”‚ â””â”€[36mParameters[0m
    â”‚   â”œâ”€[33mItem[0m
    â”‚   â””â”€[33mLabel[0m
    â”œâ”€[36mPurpose[0m
    â”‚ â””â”€[36morganize items into overlapping categories[0m
    â”œâ”€[36mDependencies[0m
    â”œâ”€[36mSignatures[0m
    â”‚ â”œâ”€[36mSignature[0m
    â”‚ â”‚ â”œâ”€[33mState[0m
    â”‚ â”‚ â”œâ”€[34mOne [0m
    â”‚ â”‚ â””â”€[36mFields[0m
    â”‚ â”‚   â””â”€[36mField[0m
    â”‚ â”‚     â”œâ”€[33mlabels[0m
    â”‚ â”‚     â”œâ”€[32mItem -> Set Label[0m
    â”‚ â”‚     â”œâ”€[36mExpression[0m
    â”‚ â”‚     â”‚ â””â”€[36mNone[0m
    â”‚ â”‚     â””â”€[36mfalse[0m
    â”‚ â”œâ”€[36mSignature[0m
    â”‚ â”‚ â”œâ”€[33mLabel[0m
    â”‚ â”‚ â”œâ”€[36mNo Fields[0m
    â”‚ â””â”€[36mSignature[0m
    â”‚   â”œâ”€[33mItem[0m
    â”‚   â”œâ”€[36mNo Fields[0m
    â”œâ”€[36mFacts[0m
    â”œâ”€[36mAssertions[0m
    â”‚ â”œâ”€[36mAssertion[0m
    â”‚ â”‚ â”œâ”€[33m_principle0[0m
    â”‚ â”‚ â””â”€[36mQuantifier[0m
    â”‚ â”‚   â”œâ”€[34mAll[0m
    â”‚ â”‚   â”œâ”€[36mVars[0m
    â”‚ â”‚   â”‚ â”œâ”€[36mVar[0m
    â”‚ â”‚   â”‚ â”‚ â”œâ”€[33ml[0m
    â”‚ â”‚   â”‚ â”‚ â””â”€[32mLabel[0m
    â”‚ â”‚   â”‚ â””â”€[36mVar[0m
    â”‚ â”‚   â”‚   â”œâ”€[33mi[0m
    â”‚ â”‚   â”‚   â””â”€[32mItem[0m
    â”‚ â”‚   â””â”€[36mUnop[0m
    â”‚ â”‚     â”œâ”€[34mAlways[0m
    â”‚ â”‚     â””â”€[36mBinop[0m
    â”‚ â”‚       â”œâ”€[34mImplication[0m
    â”‚ â”‚       â”œâ”€[36mCall[0m
    â”‚ â”‚       â”‚ â”œâ”€[33maffix[0m
    â”‚ â”‚       â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚       â”‚   â”œâ”€[33mi[0m
    â”‚ â”‚       â”‚   â””â”€[33ml[0m
    â”‚ â”‚       â””â”€[36mUnop[0m
    â”‚ â”‚         â”œâ”€[34mAfter[0m
    â”‚ â”‚         â””â”€[36mBinop[0m
    â”‚ â”‚           â”œâ”€[34mRelease[0m
    â”‚ â”‚           â”œâ”€[36mBinop[0m
    â”‚ â”‚           â”‚ â”œâ”€[34mIn[0m
    â”‚ â”‚           â”‚ â”œâ”€[33mi[0m
    â”‚ â”‚           â”‚ â””â”€[36mCall[0m
    â”‚ â”‚           â”‚   â”œâ”€[33mfind[0m
    â”‚ â”‚           â”‚   â””â”€[36mArgs[0m
    â”‚ â”‚           â”‚     â””â”€[33ml[0m
    â”‚ â”‚           â””â”€[36mBinop[0m
    â”‚ â”‚             â”œâ”€[34mOr[0m
    â”‚ â”‚             â”œâ”€[36mCall[0m
    â”‚ â”‚             â”‚ â”œâ”€[33mdetach[0m
    â”‚ â”‚             â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚             â”‚   â”œâ”€[33mi[0m
    â”‚ â”‚             â”‚   â””â”€[33ml[0m
    â”‚ â”‚             â””â”€[36mCall[0m
    â”‚ â”‚               â”œâ”€[33mclear[0m
    â”‚ â”‚               â””â”€[36mArgs[0m
    â”‚ â”‚                 â””â”€[33mi[0m
    â”‚ â””â”€[36mAssertion[0m
    â”‚   â”œâ”€[33m_principle1[0m
    â”‚   â””â”€[36mQuantifier[0m
    â”‚     â”œâ”€[34mAll[0m
    â”‚     â”œâ”€[36mVars[0m
    â”‚     â”‚ â”œâ”€[36mVar[0m
    â”‚     â”‚ â”‚ â”œâ”€[33ml[0m
    â”‚     â”‚ â”‚ â””â”€[32mLabel[0m
    â”‚     â”‚ â””â”€[36mVar[0m
    â”‚     â”‚   â”œâ”€[33mi[0m
    â”‚     â”‚   â””â”€[32mItem[0m
    â”‚     â””â”€[36mUnop[0m
    â”‚       â”œâ”€[34mAlways[0m
    â”‚       â””â”€[36mBinop[0m
    â”‚         â”œâ”€[34mImplication[0m
    â”‚         â”œâ”€[36mUnop[0m
    â”‚         â”‚ â”œâ”€[34mHistorically[0m
    â”‚         â”‚ â””â”€[36mUnop[0m
    â”‚         â”‚   â”œâ”€[34mNot[0m
    â”‚         â”‚   â””â”€[36mBinop[0m
    â”‚         â”‚     â”œâ”€[34mOr[0m
    â”‚         â”‚     â”œâ”€[36mCall[0m
    â”‚         â”‚     â”‚ â”œâ”€[33maffix[0m
    â”‚         â”‚     â”‚ â””â”€[36mArgs[0m
    â”‚         â”‚     â”‚   â”œâ”€[33mi[0m
    â”‚         â”‚     â”‚   â””â”€[33ml[0m
    â”‚         â”‚     â””â”€[36mCall[0m
    â”‚         â”‚       â”œâ”€[33mdetach[0m
    â”‚         â”‚       â””â”€[36mArgs[0m
    â”‚         â”‚         â”œâ”€[33mi[0m
    â”‚         â”‚         â””â”€[33ml[0m
    â”‚         â””â”€[36mUnop[0m
    â”‚           â”œâ”€[34mAfter[0m
    â”‚           â””â”€[36mUnop[0m
    â”‚             â”œâ”€[34mNot[0m
    â”‚             â””â”€[36mBinop[0m
    â”‚               â”œâ”€[34mIn[0m
    â”‚               â”œâ”€[33mi[0m
    â”‚               â””â”€[36mCall[0m
    â”‚                 â”œâ”€[33mfind[0m
    â”‚                 â””â”€[36mArgs[0m
    â”‚                   â””â”€[33ml[0m
    â””â”€[36mPredicates and Functions[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33maffix[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mNone[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â”œâ”€[36mParameter[0m
      â”‚ â”‚ â”‚ â”œâ”€[33mi[0m
      â”‚ â”‚ â”‚ â””â”€[32mItem[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33ml[0m
      â”‚ â”‚   â””â”€[32mLabel[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.labels')[0m
      â”‚     â””â”€[36mBinop[0m
      â”‚       â”œâ”€[34mUnion[0m
      â”‚       â”œâ”€[33m(State.labels)[0m
      â”‚       â””â”€[33mi->l[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33mdetach[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mNone[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â”œâ”€[36mParameter[0m
      â”‚ â”‚ â”‚ â”œâ”€[33mi[0m
      â”‚ â”‚ â”‚ â””â”€[32mItem[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33ml[0m
      â”‚ â”‚   â””â”€[32mLabel[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.labels')[0m
      â”‚     â””â”€[36mBinop[0m
      â”‚       â”œâ”€[34mDifference[0m
      â”‚       â”œâ”€[33m(State.labels)[0m
      â”‚       â””â”€[33mi->l[0m
      â”œâ”€[36mFunction[0m
      â”‚ â”œâ”€[33mfind[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mNone[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33ml[0m
      â”‚ â”‚   â””â”€[32mLabel[0m
      â”‚ â”œâ”€[32mItem[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â””â”€[36mBinop[0m
      â”‚     â”œâ”€[34mJoin[0m
      â”‚     â”œâ”€[33ml[0m
      â”‚     â””â”€[36mUnop[0m
      â”‚       â”œâ”€[34mTilde[0m
      â”‚       â””â”€[33m(State.labels)[0m
      â””â”€[36mPredicate[0m
        â”œâ”€[33mclear[0m
        â”œâ”€[36mCondition[0m
        â”‚ â””â”€[36mNone[0m
        â”œâ”€[36mParameters[0m
        â”‚ â””â”€[36mParameter[0m
        â”‚   â”œâ”€[33mi[0m
        â”‚   â””â”€[32mItem[0m
        â””â”€[36mBody[0m
          â””â”€[36mAssignment[0m
            â”œâ”€[33m(State.labels')[0m
            â””â”€[36mParenthesis[0m
              â””â”€[36mBinop[0m
                â”œâ”€[34mDifference[0m
                â”œâ”€[33m(State.labels)[0m
                â””â”€[36mBinop[0m
                  â”œâ”€[34mProduct[0m
                  â”œâ”€[33mi[0m
                  â””â”€[33mLabel[0m
    [36mProgram[0m
    â”œâ”€[36mModule[0m
    â”‚ â”œâ”€[33mtodo[0m
    â”‚ â””â”€[36mNo Parameters[0m
    â”œâ”€[36mPurpose[0m
    â”‚ â””â”€[36mkeep track of tasks[0m
    â”œâ”€[36mDependencies[0m
    â”œâ”€[36mSignatures[0m
    â”‚ â”œâ”€[36mSignature[0m
    â”‚ â”‚ â”œâ”€[33mState[0m
    â”‚ â”‚ â”œâ”€[34mOne [0m
    â”‚ â”‚ â””â”€[36mFields[0m
    â”‚ â”‚   â”œâ”€[36mField[0m
    â”‚ â”‚   â”‚ â”œâ”€[33mdone[0m
    â”‚ â”‚   â”‚ â”œâ”€[32mSet Task[0m
    â”‚ â”‚   â”‚ â”œâ”€[36mExpression[0m
    â”‚ â”‚   â”‚ â”‚ â””â”€[36mNone[0m
    â”‚ â”‚   â”‚ â””â”€[36mfalse[0m
    â”‚ â”‚   â””â”€[36mField[0m
    â”‚ â”‚     â”œâ”€[33mpending[0m
    â”‚ â”‚     â”œâ”€[32mSet Task[0m
    â”‚ â”‚     â”œâ”€[36mExpression[0m
    â”‚ â”‚     â”‚ â””â”€[36mNone[0m
    â”‚ â”‚     â””â”€[36mfalse[0m
    â”‚ â””â”€[36mSignature[0m
    â”‚   â”œâ”€[33mTask[0m
    â”‚   â”œâ”€[36mNo Fields[0m
    â”œâ”€[36mFacts[0m
    â”œâ”€[36mAssertions[0m
    â”‚ â”œâ”€[36mAssertion[0m
    â”‚ â”‚ â”œâ”€[33m_principle0[0m
    â”‚ â”‚ â””â”€[36mQuantifier[0m
    â”‚ â”‚   â”œâ”€[34mAll[0m
    â”‚ â”‚   â”œâ”€[36mVars[0m
    â”‚ â”‚   â”‚ â””â”€[36mVar[0m
    â”‚ â”‚   â”‚   â”œâ”€[33mt[0m
    â”‚ â”‚   â”‚   â””â”€[32mTask[0m
    â”‚ â”‚   â””â”€[36mUnop[0m
    â”‚ â”‚     â”œâ”€[34mAlways[0m
    â”‚ â”‚     â””â”€[36mBinop[0m
    â”‚ â”‚       â”œâ”€[34mImplication[0m
    â”‚ â”‚       â”œâ”€[36mCall[0m
    â”‚ â”‚       â”‚ â”œâ”€[33madd[0m
    â”‚ â”‚       â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚       â”‚   â””â”€[33mt[0m
    â”‚ â”‚       â””â”€[36mUnop[0m
    â”‚ â”‚         â”œâ”€[34mAfter[0m
    â”‚ â”‚         â””â”€[36mBinop[0m
    â”‚ â”‚           â”œâ”€[34mRelease[0m
    â”‚ â”‚           â”œâ”€[36mBinop[0m
    â”‚ â”‚           â”‚ â”œâ”€[34mIn[0m
    â”‚ â”‚           â”‚ â”œâ”€[33mt[0m
    â”‚ â”‚           â”‚ â””â”€[33m(State.pending)[0m
    â”‚ â”‚           â””â”€[36mBinop[0m
    â”‚ â”‚             â”œâ”€[34mOr[0m
    â”‚ â”‚             â”œâ”€[36mCall[0m
    â”‚ â”‚             â”‚ â”œâ”€[33mdelete[0m
    â”‚ â”‚             â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚             â”‚   â””â”€[33mt[0m
    â”‚ â”‚             â””â”€[36mCall[0m
    â”‚ â”‚               â”œâ”€[33mcomplete[0m
    â”‚ â”‚               â””â”€[36mArgs[0m
    â”‚ â”‚                 â””â”€[33mt[0m
    â”‚ â””â”€[36mAssertion[0m
    â”‚   â”œâ”€[33m_principle1[0m
    â”‚   â””â”€[36mQuantifier[0m
    â”‚     â”œâ”€[34mAll[0m
    â”‚     â”œâ”€[36mVars[0m
    â”‚     â”‚ â””â”€[36mVar[0m
    â”‚     â”‚   â”œâ”€[33mt[0m
    â”‚     â”‚   â””â”€[32mTask[0m
    â”‚     â””â”€[36mUnop[0m
    â”‚       â”œâ”€[34mAlways[0m
    â”‚       â””â”€[36mBinop[0m
    â”‚         â”œâ”€[34mImplication[0m
    â”‚         â”œâ”€[36mCall[0m
    â”‚         â”‚ â”œâ”€[33mcomplete[0m
    â”‚         â”‚ â””â”€[36mArgs[0m
    â”‚         â”‚   â””â”€[33mt[0m
    â”‚         â””â”€[36mUnop[0m
    â”‚           â”œâ”€[34mAfter[0m
    â”‚           â””â”€[36mBinop[0m
    â”‚             â”œâ”€[34mRelease[0m
    â”‚             â”œâ”€[36mBinop[0m
    â”‚             â”‚ â”œâ”€[34mIn[0m
    â”‚             â”‚ â”œâ”€[33mt[0m
    â”‚             â”‚ â””â”€[33m(State.done)[0m
    â”‚             â””â”€[36mCall[0m
    â”‚               â”œâ”€[33mdelete[0m
    â”‚               â””â”€[36mArgs[0m
    â”‚                 â””â”€[33mt[0m
    â””â”€[36mPredicates and Functions[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33madd[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mUnop[0m
      â”‚ â”‚   â”œâ”€[34mNot[0m
      â”‚ â”‚   â””â”€[36mBinop[0m
      â”‚ â”‚     â”œâ”€[34mIn[0m
      â”‚ â”‚     â”œâ”€[33mt[0m
      â”‚ â”‚     â””â”€[36mBinop[0m
      â”‚ â”‚       â”œâ”€[34mUnion[0m
      â”‚ â”‚       â”œâ”€[33m(State.done)[0m
      â”‚ â”‚       â””â”€[33m(State.pending)[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33mt[0m
      â”‚ â”‚   â””â”€[32mTask[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.pending')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mUnion[0m
      â”‚   â”‚   â”œâ”€[33m(State.pending)[0m
      â”‚   â”‚   â””â”€[33mt[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.done')[0m
      â”‚     â””â”€[33m(State.done)[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33mdelete[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mBinop[0m
      â”‚ â”‚   â”œâ”€[34mIn[0m
      â”‚ â”‚   â”œâ”€[33mt[0m
      â”‚ â”‚   â””â”€[36mBinop[0m
      â”‚ â”‚     â”œâ”€[34mUnion[0m
      â”‚ â”‚     â”œâ”€[33m(State.done)[0m
      â”‚ â”‚     â””â”€[33m(State.pending)[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33mt[0m
      â”‚ â”‚   â””â”€[32mTask[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.pending')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mDifference[0m
      â”‚   â”‚   â”œâ”€[33m(State.pending)[0m
      â”‚   â”‚   â””â”€[33mt[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.done')[0m
      â”‚     â””â”€[36mBinop[0m
      â”‚       â”œâ”€[34mDifference[0m
      â”‚       â”œâ”€[33m(State.done)[0m
      â”‚       â””â”€[33mt[0m
      â””â”€[36mPredicate[0m
        â”œâ”€[33mcomplete[0m
        â”œâ”€[36mCondition[0m
        â”‚ â””â”€[36mBinop[0m
        â”‚   â”œâ”€[34mIn[0m
        â”‚   â”œâ”€[33mt[0m
        â”‚   â””â”€[33m(State.pending)[0m
        â”œâ”€[36mParameters[0m
        â”‚ â””â”€[36mParameter[0m
        â”‚   â”œâ”€[33mt[0m
        â”‚   â””â”€[32mTask[0m
        â””â”€[36mBody[0m
          â”œâ”€[36mAssignment[0m
          â”‚ â”œâ”€[33m(State.pending')[0m
          â”‚ â””â”€[36mBinop[0m
          â”‚   â”œâ”€[34mDifference[0m
          â”‚   â”œâ”€[33m(State.pending)[0m
          â”‚   â””â”€[33mt[0m
          â””â”€[36mAssignment[0m
            â”œâ”€[33m(State.done')[0m
            â””â”€[36mBinop[0m
              â”œâ”€[34mUnion[0m
              â”œâ”€[33m(State.done)[0m
              â””â”€[33mt[0m
    [36mProgram[0m
    â”œâ”€[36mModule[0m
    â”‚ â”œâ”€[33mtodo_label[0m
    â”‚ â””â”€[36mNo Parameters[0m
    â”œâ”€[36mPurpose[0m
    â”‚ â””â”€[36mNo Purpose[0m
    â”œâ”€[36mDependencies[0m
    â”‚ â”œâ”€[36mDependency[0m
    â”‚ â”‚ â”œâ”€[33mtodo[0m
    â”‚ â”‚ â””â”€[36mGenerics[0m
    â”‚ â””â”€[36mDependency[0m
    â”‚   â”œâ”€[33mlabel[0m
    â”‚   â””â”€[36mGenerics[0m
    â”‚     â”œâ”€[36mGeneric[0m
    â”‚     â”‚ â”œâ”€[33mtodo[0m
    â”‚     â”‚ â””â”€[32mTask[0m
    â”‚     â””â”€[36mGeneric[0m
    â”‚       â”œâ”€[33mNo Generic[0m
    â”‚       â””â”€[32mString[0m
    â”œâ”€[36mSignatures[0m
    â”œâ”€[36mFacts[0m
    â”‚ â”œâ”€[36mFact[0m
    â”‚ â”‚ â”œâ”€[33m_sync_todo_delete0[0m
    â”‚ â”‚ â””â”€[36mUnop[0m
    â”‚ â”‚   â”œâ”€[34mAlways[0m
    â”‚ â”‚   â””â”€[36mQuantifier[0m
    â”‚ â”‚     â”œâ”€[34mAll[0m
    â”‚ â”‚     â”œâ”€[36mVars[0m
    â”‚ â”‚     â”‚ â””â”€[36mVar[0m
    â”‚ â”‚     â”‚   â”œâ”€[33mt[0m
    â”‚ â”‚     â”‚   â””â”€[32mtodo/Task[0m
    â”‚ â”‚     â””â”€[36mBinop[0m
    â”‚ â”‚       â”œâ”€[34mImplication[0m
    â”‚ â”‚       â”œâ”€[36mCall[0m
    â”‚ â”‚       â”‚ â”œâ”€[33mtodo/delete[0m
    â”‚ â”‚       â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚       â”‚   â””â”€[33mt[0m
    â”‚ â”‚       â””â”€[36mUnop[0m
    â”‚ â”‚         â”œâ”€[34mAfter[0m
    â”‚ â”‚         â””â”€[36mCall[0m
    â”‚ â”‚           â”œâ”€[33mlabel/clear[0m
    â”‚ â”‚           â””â”€[36mArgs[0m
    â”‚ â”‚             â””â”€[33mt[0m
    â”‚ â”œâ”€[36mFact[0m
    â”‚ â”‚ â”œâ”€[33m_sync_todo_add1[0m
    â”‚ â”‚ â””â”€[36mUnop[0m
    â”‚ â”‚   â”œâ”€[34mAlways[0m
    â”‚ â”‚   â””â”€[36mQuantifier[0m
    â”‚ â”‚     â”œâ”€[34mAll[0m
    â”‚ â”‚     â”œâ”€[36mVars[0m
    â”‚ â”‚     â”‚ â””â”€[36mVar[0m
    â”‚ â”‚     â”‚   â”œâ”€[33mt[0m
    â”‚ â”‚     â”‚   â””â”€[32mtodo/Task[0m
    â”‚ â”‚     â””â”€[36mBinop[0m
    â”‚ â”‚       â”œâ”€[34mImplication[0m
    â”‚ â”‚       â”œâ”€[36mCall[0m
    â”‚ â”‚       â”‚ â”œâ”€[33mtodo/add[0m
    â”‚ â”‚       â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚       â”‚   â””â”€[33mt[0m
    â”‚ â”‚       â””â”€[36mUnop[0m
    â”‚ â”‚         â”œâ”€[34mAfter[0m
    â”‚ â”‚         â””â”€[36mCall[0m
    â”‚ â”‚           â”œâ”€[33mlabel/affix[0m
    â”‚ â”‚           â””â”€[36mArgs[0m
    â”‚ â”‚             â”œâ”€[33mt[0m
    â”‚ â”‚             â””â”€[36mpending[0m
    â”‚ â”œâ”€[36mFact[0m
    â”‚ â”‚ â”œâ”€[33m_sync_todo_complete2[0m
    â”‚ â”‚ â””â”€[36mUnop[0m
    â”‚ â”‚   â”œâ”€[34mAlways[0m
    â”‚ â”‚   â””â”€[36mQuantifier[0m
    â”‚ â”‚     â”œâ”€[34mAll[0m
    â”‚ â”‚     â”œâ”€[36mVars[0m
    â”‚ â”‚     â”‚ â””â”€[36mVar[0m
    â”‚ â”‚     â”‚   â”œâ”€[33mt[0m
    â”‚ â”‚     â”‚   â””â”€[32mtodo/Task[0m
    â”‚ â”‚     â””â”€[36mBinop[0m
    â”‚ â”‚       â”œâ”€[34mImplication[0m
    â”‚ â”‚       â”œâ”€[36mCall[0m
    â”‚ â”‚       â”‚ â”œâ”€[33mtodo/complete[0m
    â”‚ â”‚       â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚       â”‚   â””â”€[33mt[0m
    â”‚ â”‚       â””â”€[36mUnop[0m
    â”‚ â”‚         â”œâ”€[34mAfter[0m
    â”‚ â”‚         â””â”€[36mCall[0m
    â”‚ â”‚           â”œâ”€[33mlabel/detach[0m
    â”‚ â”‚           â””â”€[36mArgs[0m
    â”‚ â”‚             â”œâ”€[33mt[0m
    â”‚ â”‚             â””â”€[36mpending[0m
    â”‚ â”œâ”€[36mFact[0m
    â”‚ â”‚ â”œâ”€[33m_sync_label_detach3[0m
    â”‚ â”‚ â””â”€[36mUnop[0m
    â”‚ â”‚   â”œâ”€[34mAlways[0m
    â”‚ â”‚   â””â”€[36mQuantifier[0m
    â”‚ â”‚     â”œâ”€[34mAll[0m
    â”‚ â”‚     â”œâ”€[36mVars[0m
    â”‚ â”‚     â”‚ â””â”€[36mVar[0m
    â”‚ â”‚     â”‚   â”œâ”€[33mt[0m
    â”‚ â”‚     â”‚   â””â”€[32mtodo/Task[0m
    â”‚ â”‚     â””â”€[36mBinop[0m
    â”‚ â”‚       â”œâ”€[34mImplication[0m
    â”‚ â”‚       â”œâ”€[36mCall[0m
    â”‚ â”‚       â”‚ â”œâ”€[33mlabel/detach[0m
    â”‚ â”‚       â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚       â”‚   â”œâ”€[33mt[0m
    â”‚ â”‚       â”‚   â””â”€[36mpending[0m
    â”‚ â”‚       â””â”€[36mUnop[0m
    â”‚ â”‚         â”œâ”€[34mAfter[0m
    â”‚ â”‚         â””â”€[36mCall[0m
    â”‚ â”‚           â”œâ”€[33mtodo/complete[0m
    â”‚ â”‚           â””â”€[36mArgs[0m
    â”‚ â”‚             â””â”€[33mt[0m
    â”‚ â””â”€[36mFact[0m
    â”‚   â”œâ”€[33m_sync_label_affix4[0m
    â”‚   â””â”€[36mUnop[0m
    â”‚     â”œâ”€[34mAlways[0m
    â”‚     â””â”€[36mQuantifier[0m
    â”‚       â”œâ”€[34mAll[0m
    â”‚       â”œâ”€[36mVars[0m
    â”‚       â”‚ â””â”€[36mVar[0m
    â”‚       â”‚   â”œâ”€[33mt[0m
    â”‚       â”‚   â””â”€[32mtodo/Task[0m
    â”‚       â””â”€[36mBinop[0m
    â”‚         â”œâ”€[34mImplication[0m
    â”‚         â”œâ”€[36mCall[0m
    â”‚         â”‚ â”œâ”€[33mlabel/affix[0m
    â”‚         â”‚ â””â”€[36mArgs[0m
    â”‚         â”‚   â”œâ”€[33mt[0m
    â”‚         â”‚   â””â”€[36mpending[0m
    â”‚         â””â”€[36mUnop[0m
    â”‚           â”œâ”€[34mAfter[0m
    â”‚           â””â”€[36mCall[0m
    â”‚             â”œâ”€[33mtodo/add[0m
    â”‚             â””â”€[36mArgs[0m
    â”‚               â””â”€[33mt[0m
    â”œâ”€[36mAssertions[0m
    â””â”€[36mPredicates and Functions[0m |}]
  
let %expect_test "Todo-Label-Email App Alloy AST" = 
  !> "todo-label-email";
  [%expect {|
    [36mProgram[0m
    â”œâ”€[36mModule[0m
    â”‚ â”œâ”€[33memail[0m
    â”‚ â””â”€[36mNo Parameters[0m
    â”œâ”€[36mPurpose[0m
    â”‚ â””â”€[36mcommunicate with private messages[0m
    â”œâ”€[36mDependencies[0m
    â”œâ”€[36mSignatures[0m
    â”‚ â”œâ”€[36mSignature[0m
    â”‚ â”‚ â”œâ”€[33mState[0m
    â”‚ â”‚ â”œâ”€[34mOne [0m
    â”‚ â”‚ â””â”€[36mFields[0m
    â”‚ â”‚   â”œâ”€[36mField[0m
    â”‚ â”‚   â”‚ â”œâ”€[33minbox[0m
    â”‚ â”‚   â”‚ â”œâ”€[32mUser -> Set Message[0m
    â”‚ â”‚   â”‚ â”œâ”€[36mExpression[0m
    â”‚ â”‚   â”‚ â”‚ â””â”€[36mNone[0m
    â”‚ â”‚   â”‚ â””â”€[36mfalse[0m
    â”‚ â”‚   â”œâ”€[36mField[0m
    â”‚ â”‚   â”‚ â”œâ”€[33mfrom[0m
    â”‚ â”‚   â”‚ â”œâ”€[32mMessage -> User[0m
    â”‚ â”‚   â”‚ â”œâ”€[36mExpression[0m
    â”‚ â”‚   â”‚ â”‚ â””â”€[36mNone[0m
    â”‚ â”‚   â”‚ â””â”€[36mfalse[0m
    â”‚ â”‚   â”œâ”€[36mField[0m
    â”‚ â”‚   â”‚ â”œâ”€[33mto[0m
    â”‚ â”‚   â”‚ â”œâ”€[32mMessage -> User[0m
    â”‚ â”‚   â”‚ â”œâ”€[36mExpression[0m
    â”‚ â”‚   â”‚ â”‚ â””â”€[36mNone[0m
    â”‚ â”‚   â”‚ â””â”€[36mfalse[0m
    â”‚ â”‚   â””â”€[36mField[0m
    â”‚ â”‚     â”œâ”€[33mcontent[0m
    â”‚ â”‚     â”œâ”€[32mMessage -> Content[0m
    â”‚ â”‚     â”œâ”€[36mExpression[0m
    â”‚ â”‚     â”‚ â””â”€[36mNone[0m
    â”‚ â”‚     â””â”€[36mfalse[0m
    â”‚ â”œâ”€[36mSignature[0m
    â”‚ â”‚ â”œâ”€[33mUser[0m
    â”‚ â”‚ â”œâ”€[36mNo Fields[0m
    â”‚ â”œâ”€[36mSignature[0m
    â”‚ â”‚ â”œâ”€[33mContent[0m
    â”‚ â”‚ â”œâ”€[36mNo Fields[0m
    â”‚ â””â”€[36mSignature[0m
    â”‚   â”œâ”€[33mMessage[0m
    â”‚   â”œâ”€[36mNo Fields[0m
    â”œâ”€[36mFacts[0m
    â”œâ”€[36mAssertions[0m
    â”‚ â””â”€[36mAssertion[0m
    â”‚   â”œâ”€[33m_principle0[0m
    â”‚   â””â”€[36mQuantifier[0m
    â”‚     â”œâ”€[34mAll[0m
    â”‚     â”œâ”€[36mVars[0m
    â”‚     â”‚ â”œâ”€[36mVar[0m
    â”‚     â”‚ â”‚ â”œâ”€[33mc[0m
    â”‚     â”‚ â”‚ â””â”€[32mContent[0m
    â”‚     â”‚ â”œâ”€[36mVar[0m
    â”‚     â”‚ â”‚ â”œâ”€[33mm[0m
    â”‚     â”‚ â”‚ â””â”€[32mMessage[0m
    â”‚     â”‚ â”œâ”€[36mVar[0m
    â”‚     â”‚ â”‚ â”œâ”€[33mt[0m
    â”‚     â”‚ â”‚ â””â”€[32mUser[0m
    â”‚     â”‚ â””â”€[36mVar[0m
    â”‚     â”‚   â”œâ”€[33mb[0m
    â”‚     â”‚   â””â”€[32mUser[0m
    â”‚     â””â”€[36mUnop[0m
    â”‚       â”œâ”€[34mAlways[0m
    â”‚       â””â”€[36mBinop[0m
    â”‚         â”œâ”€[34mImplication[0m
    â”‚         â”œâ”€[36mCall[0m
    â”‚         â”‚ â”œâ”€[33msend[0m
    â”‚         â”‚ â””â”€[36mArgs[0m
    â”‚         â”‚   â”œâ”€[33mb[0m
    â”‚         â”‚   â”œâ”€[33mt[0m
    â”‚         â”‚   â”œâ”€[33mm[0m
    â”‚         â”‚   â””â”€[33mc[0m
    â”‚         â””â”€[36mUnop[0m
    â”‚           â”œâ”€[34mAfter[0m
    â”‚           â””â”€[36mBinop[0m
    â”‚             â”œâ”€[34mImplication[0m
    â”‚             â”œâ”€[36mCall[0m
    â”‚             â”‚ â”œâ”€[33mreceive[0m
    â”‚             â”‚ â””â”€[36mArgs[0m
    â”‚             â”‚   â”œâ”€[33mt[0m
    â”‚             â”‚   â””â”€[33mm[0m
    â”‚             â””â”€[36mUnop[0m
    â”‚               â”œâ”€[34mAfter[0m
    â”‚               â””â”€[36mBinop[0m
    â”‚                 â”œâ”€[34mAnd[0m
    â”‚                 â”œâ”€[36mBinop[0m
    â”‚                 â”‚ â”œâ”€[34mIn[0m
    â”‚                 â”‚ â”œâ”€[33mm[0m
    â”‚                 â”‚ â””â”€[36mBinop[0m
    â”‚                 â”‚   â”œâ”€[34mJoin[0m
    â”‚                 â”‚   â”œâ”€[33mt[0m
    â”‚                 â”‚   â””â”€[33m(State.inbox)[0m
    â”‚                 â””â”€[36mBinop[0m
    â”‚                   â”œâ”€[34mEq[0m
    â”‚                   â”œâ”€[36mBinop[0m
    â”‚                   â”‚ â”œâ”€[34mJoin[0m
    â”‚                   â”‚ â”œâ”€[33mm[0m
    â”‚                   â”‚ â””â”€[33m(State.content)[0m
    â”‚                   â””â”€[33mc[0m
    â””â”€[36mPredicates and Functions[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33msend[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mUnop[0m
      â”‚ â”‚   â”œâ”€[34mNot[0m
      â”‚ â”‚   â””â”€[36mBinop[0m
      â”‚ â”‚     â”œâ”€[34mIn[0m
      â”‚ â”‚     â”œâ”€[33mm[0m
      â”‚ â”‚     â””â”€[36mBinop[0m
      â”‚ â”‚       â”œâ”€[34mJoin[0m
      â”‚ â”‚       â”œâ”€[33mt[0m
      â”‚ â”‚       â””â”€[33m(State.inbox)[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â”œâ”€[36mParameter[0m
      â”‚ â”‚ â”‚ â”œâ”€[33mby[0m
      â”‚ â”‚ â”‚ â””â”€[32mUser[0m
      â”‚ â”‚ â”œâ”€[36mParameter[0m
      â”‚ â”‚ â”‚ â”œâ”€[33mt[0m
      â”‚ â”‚ â”‚ â””â”€[32mUser[0m
      â”‚ â”‚ â”œâ”€[36mParameter[0m
      â”‚ â”‚ â”‚ â”œâ”€[33mm[0m
      â”‚ â”‚ â”‚ â””â”€[32mMessage[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33mc[0m
      â”‚ â”‚   â””â”€[32mContent[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.content')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mUnion[0m
      â”‚   â”‚   â”œâ”€[36mParenthesis[0m
      â”‚   â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”‚   â”œâ”€[34mDifference[0m
      â”‚   â”‚   â”‚   â”œâ”€[33m(State.content)[0m
      â”‚   â”‚   â”‚   â””â”€[36mBinop[0m
      â”‚   â”‚   â”‚     â”œâ”€[34mProduct[0m
      â”‚   â”‚   â”‚     â”œâ”€[33mm[0m
      â”‚   â”‚   â”‚     â””â”€[33mContent[0m
      â”‚   â”‚   â””â”€[33mm->c[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.to')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mUnion[0m
      â”‚   â”‚   â”œâ”€[36mParenthesis[0m
      â”‚   â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”‚   â”œâ”€[34mDifference[0m
      â”‚   â”‚   â”‚   â”œâ”€[33m(State.to)[0m
      â”‚   â”‚   â”‚   â””â”€[36mBinop[0m
      â”‚   â”‚   â”‚     â”œâ”€[34mProduct[0m
      â”‚   â”‚   â”‚     â”œâ”€[33mm[0m
      â”‚   â”‚   â”‚     â””â”€[33mUser[0m
      â”‚   â”‚   â””â”€[33mm->t[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.from')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mUnion[0m
      â”‚   â”‚   â”œâ”€[36mParenthesis[0m
      â”‚   â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”‚   â”œâ”€[34mDifference[0m
      â”‚   â”‚   â”‚   â”œâ”€[33m(State.from)[0m
      â”‚   â”‚   â”‚   â””â”€[36mBinop[0m
      â”‚   â”‚   â”‚     â”œâ”€[34mProduct[0m
      â”‚   â”‚   â”‚     â”œâ”€[33mm[0m
      â”‚   â”‚   â”‚     â””â”€[33mUser[0m
      â”‚   â”‚   â””â”€[33mm->by[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.inbox')[0m
      â”‚     â””â”€[33m(State.inbox)[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33mreceive[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mBinop[0m
      â”‚ â”‚   â”œâ”€[34mAnd[0m
      â”‚ â”‚   â”œâ”€[36mUnop[0m
      â”‚ â”‚   â”‚ â”œâ”€[34mNot[0m
      â”‚ â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚ â”‚   â”‚   â”œâ”€[34mIn[0m
      â”‚ â”‚   â”‚   â”œâ”€[33mm[0m
      â”‚ â”‚   â”‚   â””â”€[36mBinop[0m
      â”‚ â”‚   â”‚     â”œâ”€[34mJoin[0m
      â”‚ â”‚   â”‚     â”œâ”€[33mby[0m
      â”‚ â”‚   â”‚     â””â”€[33m(State.inbox)[0m
      â”‚ â”‚   â””â”€[36mBinop[0m
      â”‚ â”‚     â”œâ”€[34mEq[0m
      â”‚ â”‚     â”œâ”€[36mBinop[0m
      â”‚ â”‚     â”‚ â”œâ”€[34mJoin[0m
      â”‚ â”‚     â”‚ â”œâ”€[33mm[0m
      â”‚ â”‚     â”‚ â””â”€[33m(State.to)[0m
      â”‚ â”‚     â””â”€[33mby[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â”œâ”€[36mParameter[0m
      â”‚ â”‚ â”‚ â”œâ”€[33mby[0m
      â”‚ â”‚ â”‚ â””â”€[32mUser[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33mm[0m
      â”‚ â”‚   â””â”€[32mMessage[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.inbox')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mUnion[0m
      â”‚   â”‚   â”œâ”€[33m(State.inbox)[0m
      â”‚   â”‚   â””â”€[33mby->m[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.from')[0m
      â”‚   â”‚ â””â”€[33m(State.from)[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.to')[0m
      â”‚   â”‚ â””â”€[33m(State.to)[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.content')[0m
      â”‚     â””â”€[33m(State.content)[0m
      â””â”€[36mPredicate[0m
        â”œâ”€[33mdelete[0m
        â”œâ”€[36mCondition[0m
        â”‚ â””â”€[36mBinop[0m
        â”‚   â”œâ”€[34mIn[0m
        â”‚   â”œâ”€[33mm[0m
        â”‚   â””â”€[36mBinop[0m
        â”‚     â”œâ”€[34mJoin[0m
        â”‚     â”œâ”€[33mu[0m
        â”‚     â””â”€[33m(State.inbox)[0m
        â”œâ”€[36mParameters[0m
        â”‚ â”œâ”€[36mParameter[0m
        â”‚ â”‚ â”œâ”€[33mu[0m
        â”‚ â”‚ â””â”€[32mUser[0m
        â”‚ â””â”€[36mParameter[0m
        â”‚   â”œâ”€[33mm[0m
        â”‚   â””â”€[32mMessage[0m
        â””â”€[36mBody[0m
          â”œâ”€[36mAssignment[0m
          â”‚ â”œâ”€[33m(State.content')[0m
          â”‚ â””â”€[36mParenthesis[0m
          â”‚   â””â”€[36mBinop[0m
          â”‚     â”œâ”€[34mDifference[0m
          â”‚     â”œâ”€[33m(State.content)[0m
          â”‚     â””â”€[36mBinop[0m
          â”‚       â”œâ”€[34mProduct[0m
          â”‚       â”œâ”€[33mm[0m
          â”‚       â””â”€[33mContent[0m
          â”œâ”€[36mAssignment[0m
          â”‚ â”œâ”€[33m(State.to')[0m
          â”‚ â””â”€[36mParenthesis[0m
          â”‚   â””â”€[36mBinop[0m
          â”‚     â”œâ”€[34mDifference[0m
          â”‚     â”œâ”€[33m(State.to)[0m
          â”‚     â””â”€[36mBinop[0m
          â”‚       â”œâ”€[34mProduct[0m
          â”‚       â”œâ”€[33mm[0m
          â”‚       â””â”€[33mUser[0m
          â”œâ”€[36mAssignment[0m
          â”‚ â”œâ”€[33m(State.from')[0m
          â”‚ â””â”€[36mParenthesis[0m
          â”‚   â””â”€[36mBinop[0m
          â”‚     â”œâ”€[34mDifference[0m
          â”‚     â”œâ”€[33m(State.from)[0m
          â”‚     â””â”€[36mBinop[0m
          â”‚       â”œâ”€[34mProduct[0m
          â”‚       â”œâ”€[33mm[0m
          â”‚       â””â”€[33mUser[0m
          â””â”€[36mAssignment[0m
            â”œâ”€[33m(State.inbox')[0m
            â””â”€[36mBinop[0m
              â”œâ”€[34mDifference[0m
              â”œâ”€[33m(State.inbox)[0m
              â””â”€[33mu->m[0m
    [36mProgram[0m
    â”œâ”€[36mModule[0m
    â”‚ â”œâ”€[33mtodo[0m
    â”‚ â””â”€[36mParameters[0m
    â”‚   â””â”€[33mTask[0m
    â”œâ”€[36mPurpose[0m
    â”‚ â””â”€[36mkeep track of tasks[0m
    â”œâ”€[36mDependencies[0m
    â”œâ”€[36mSignatures[0m
    â”‚ â”œâ”€[36mSignature[0m
    â”‚ â”‚ â”œâ”€[33mState[0m
    â”‚ â”‚ â”œâ”€[34mOne [0m
    â”‚ â”‚ â””â”€[36mFields[0m
    â”‚ â”‚   â”œâ”€[36mField[0m
    â”‚ â”‚   â”‚ â”œâ”€[33mdone[0m
    â”‚ â”‚   â”‚ â”œâ”€[32mSet Task[0m
    â”‚ â”‚   â”‚ â”œâ”€[36mExpression[0m
    â”‚ â”‚   â”‚ â”‚ â””â”€[36mNone[0m
    â”‚ â”‚   â”‚ â””â”€[36mfalse[0m
    â”‚ â”‚   â””â”€[36mField[0m
    â”‚ â”‚     â”œâ”€[33mpending[0m
    â”‚ â”‚     â”œâ”€[32mSet Task[0m
    â”‚ â”‚     â”œâ”€[36mExpression[0m
    â”‚ â”‚     â”‚ â””â”€[36mNone[0m
    â”‚ â”‚     â””â”€[36mfalse[0m
    â”‚ â””â”€[36mSignature[0m
    â”‚   â”œâ”€[33mTask[0m
    â”‚   â”œâ”€[36mNo Fields[0m
    â”œâ”€[36mFacts[0m
    â”œâ”€[36mAssertions[0m
    â”‚ â”œâ”€[36mAssertion[0m
    â”‚ â”‚ â”œâ”€[33m_principle0[0m
    â”‚ â”‚ â””â”€[36mQuantifier[0m
    â”‚ â”‚   â”œâ”€[34mAll[0m
    â”‚ â”‚   â”œâ”€[36mVars[0m
    â”‚ â”‚   â”‚ â””â”€[36mVar[0m
    â”‚ â”‚   â”‚   â”œâ”€[33mt[0m
    â”‚ â”‚   â”‚   â””â”€[32mTask[0m
    â”‚ â”‚   â””â”€[36mUnop[0m
    â”‚ â”‚     â”œâ”€[34mAlways[0m
    â”‚ â”‚     â””â”€[36mBinop[0m
    â”‚ â”‚       â”œâ”€[34mImplication[0m
    â”‚ â”‚       â”œâ”€[36mCall[0m
    â”‚ â”‚       â”‚ â”œâ”€[33madd[0m
    â”‚ â”‚       â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚       â”‚   â””â”€[33mt[0m
    â”‚ â”‚       â””â”€[36mUnop[0m
    â”‚ â”‚         â”œâ”€[34mAfter[0m
    â”‚ â”‚         â””â”€[36mBinop[0m
    â”‚ â”‚           â”œâ”€[34mRelease[0m
    â”‚ â”‚           â”œâ”€[36mBinop[0m
    â”‚ â”‚           â”‚ â”œâ”€[34mIn[0m
    â”‚ â”‚           â”‚ â”œâ”€[33mt[0m
    â”‚ â”‚           â”‚ â””â”€[33m(State.pending)[0m
    â”‚ â”‚           â””â”€[36mBinop[0m
    â”‚ â”‚             â”œâ”€[34mOr[0m
    â”‚ â”‚             â”œâ”€[36mCall[0m
    â”‚ â”‚             â”‚ â”œâ”€[33mdelete[0m
    â”‚ â”‚             â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚             â”‚   â””â”€[33mt[0m
    â”‚ â”‚             â””â”€[36mCall[0m
    â”‚ â”‚               â”œâ”€[33mcomplete[0m
    â”‚ â”‚               â””â”€[36mArgs[0m
    â”‚ â”‚                 â””â”€[33mt[0m
    â”‚ â””â”€[36mAssertion[0m
    â”‚   â”œâ”€[33m_principle1[0m
    â”‚   â””â”€[36mQuantifier[0m
    â”‚     â”œâ”€[34mAll[0m
    â”‚     â”œâ”€[36mVars[0m
    â”‚     â”‚ â””â”€[36mVar[0m
    â”‚     â”‚   â”œâ”€[33mt[0m
    â”‚     â”‚   â””â”€[32mTask[0m
    â”‚     â””â”€[36mUnop[0m
    â”‚       â”œâ”€[34mAlways[0m
    â”‚       â””â”€[36mBinop[0m
    â”‚         â”œâ”€[34mImplication[0m
    â”‚         â”œâ”€[36mCall[0m
    â”‚         â”‚ â”œâ”€[33mcomplete[0m
    â”‚         â”‚ â””â”€[36mArgs[0m
    â”‚         â”‚   â””â”€[33mt[0m
    â”‚         â””â”€[36mUnop[0m
    â”‚           â”œâ”€[34mAfter[0m
    â”‚           â””â”€[36mBinop[0m
    â”‚             â”œâ”€[34mRelease[0m
    â”‚             â”œâ”€[36mBinop[0m
    â”‚             â”‚ â”œâ”€[34mIn[0m
    â”‚             â”‚ â”œâ”€[33mt[0m
    â”‚             â”‚ â””â”€[33m(State.done)[0m
    â”‚             â””â”€[36mCall[0m
    â”‚               â”œâ”€[33mdelete[0m
    â”‚               â””â”€[36mArgs[0m
    â”‚                 â””â”€[33mt[0m
    â””â”€[36mPredicates and Functions[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33madd[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mUnop[0m
      â”‚ â”‚   â”œâ”€[34mNot[0m
      â”‚ â”‚   â””â”€[36mBinop[0m
      â”‚ â”‚     â”œâ”€[34mIn[0m
      â”‚ â”‚     â”œâ”€[33mt[0m
      â”‚ â”‚     â””â”€[36mBinop[0m
      â”‚ â”‚       â”œâ”€[34mUnion[0m
      â”‚ â”‚       â”œâ”€[33m(State.done)[0m
      â”‚ â”‚       â””â”€[33m(State.pending)[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33mt[0m
      â”‚ â”‚   â””â”€[32mTask[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.pending')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mUnion[0m
      â”‚   â”‚   â”œâ”€[33m(State.pending)[0m
      â”‚   â”‚   â””â”€[33mt[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.done')[0m
      â”‚     â””â”€[33m(State.done)[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33mdelete[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mBinop[0m
      â”‚ â”‚   â”œâ”€[34mIn[0m
      â”‚ â”‚   â”œâ”€[33mt[0m
      â”‚ â”‚   â””â”€[36mBinop[0m
      â”‚ â”‚     â”œâ”€[34mUnion[0m
      â”‚ â”‚     â”œâ”€[33m(State.done)[0m
      â”‚ â”‚     â””â”€[33m(State.pending)[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33mt[0m
      â”‚ â”‚   â””â”€[32mTask[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â”œâ”€[36mAssignment[0m
      â”‚   â”‚ â”œâ”€[33m(State.pending')[0m
      â”‚   â”‚ â””â”€[36mBinop[0m
      â”‚   â”‚   â”œâ”€[34mDifference[0m
      â”‚   â”‚   â”œâ”€[33m(State.pending)[0m
      â”‚   â”‚   â””â”€[33mt[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.done')[0m
      â”‚     â””â”€[36mBinop[0m
      â”‚       â”œâ”€[34mDifference[0m
      â”‚       â”œâ”€[33m(State.done)[0m
      â”‚       â””â”€[33mt[0m
      â””â”€[36mPredicate[0m
        â”œâ”€[33mcomplete[0m
        â”œâ”€[36mCondition[0m
        â”‚ â””â”€[36mBinop[0m
        â”‚   â”œâ”€[34mIn[0m
        â”‚   â”œâ”€[33mt[0m
        â”‚   â””â”€[33m(State.pending)[0m
        â”œâ”€[36mParameters[0m
        â”‚ â””â”€[36mParameter[0m
        â”‚   â”œâ”€[33mt[0m
        â”‚   â””â”€[32mTask[0m
        â””â”€[36mBody[0m
          â”œâ”€[36mAssignment[0m
          â”‚ â”œâ”€[33m(State.pending')[0m
          â”‚ â””â”€[36mBinop[0m
          â”‚   â”œâ”€[34mDifference[0m
          â”‚   â”œâ”€[33m(State.pending)[0m
          â”‚   â””â”€[33mt[0m
          â””â”€[36mAssignment[0m
            â”œâ”€[33m(State.done')[0m
            â””â”€[36mBinop[0m
              â”œâ”€[34mUnion[0m
              â”œâ”€[33m(State.done)[0m
              â””â”€[33mt[0m
    [36mProgram[0m
    â”œâ”€[36mModule[0m
    â”‚ â”œâ”€[33mlabel[0m
    â”‚ â””â”€[36mParameters[0m
    â”‚   â””â”€[33mItem[0m
    â”œâ”€[36mPurpose[0m
    â”‚ â””â”€[36morganize items into overlapping categories[0m
    â”œâ”€[36mDependencies[0m
    â”œâ”€[36mSignatures[0m
    â”‚ â”œâ”€[36mSignature[0m
    â”‚ â”‚ â”œâ”€[33mState[0m
    â”‚ â”‚ â”œâ”€[34mOne [0m
    â”‚ â”‚ â””â”€[36mFields[0m
    â”‚ â”‚   â””â”€[36mField[0m
    â”‚ â”‚     â”œâ”€[33mlabels[0m
    â”‚ â”‚     â”œâ”€[32mItem -> Set Label[0m
    â”‚ â”‚     â”œâ”€[36mExpression[0m
    â”‚ â”‚     â”‚ â””â”€[36mNone[0m
    â”‚ â”‚     â””â”€[36mfalse[0m
    â”‚ â”œâ”€[36mSignature[0m
    â”‚ â”‚ â”œâ”€[33mLabel[0m
    â”‚ â”‚ â”œâ”€[36mNo Fields[0m
    â”‚ â””â”€[36mSignature[0m
    â”‚   â”œâ”€[33mItem[0m
    â”‚   â”œâ”€[36mNo Fields[0m
    â”œâ”€[36mFacts[0m
    â”œâ”€[36mAssertions[0m
    â”‚ â”œâ”€[36mAssertion[0m
    â”‚ â”‚ â”œâ”€[33m_principle0[0m
    â”‚ â”‚ â””â”€[36mQuantifier[0m
    â”‚ â”‚   â”œâ”€[34mAll[0m
    â”‚ â”‚   â”œâ”€[36mVars[0m
    â”‚ â”‚   â”‚ â”œâ”€[36mVar[0m
    â”‚ â”‚   â”‚ â”‚ â”œâ”€[33ml[0m
    â”‚ â”‚   â”‚ â”‚ â””â”€[32mLabel[0m
    â”‚ â”‚   â”‚ â””â”€[36mVar[0m
    â”‚ â”‚   â”‚   â”œâ”€[33mi[0m
    â”‚ â”‚   â”‚   â””â”€[32mItem[0m
    â”‚ â”‚   â””â”€[36mUnop[0m
    â”‚ â”‚     â”œâ”€[34mAlways[0m
    â”‚ â”‚     â””â”€[36mBinop[0m
    â”‚ â”‚       â”œâ”€[34mImplication[0m
    â”‚ â”‚       â”œâ”€[36mCall[0m
    â”‚ â”‚       â”‚ â”œâ”€[33maffix[0m
    â”‚ â”‚       â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚       â”‚   â”œâ”€[33mi[0m
    â”‚ â”‚       â”‚   â””â”€[33ml[0m
    â”‚ â”‚       â””â”€[36mUnop[0m
    â”‚ â”‚         â”œâ”€[34mAfter[0m
    â”‚ â”‚         â””â”€[36mBinop[0m
    â”‚ â”‚           â”œâ”€[34mRelease[0m
    â”‚ â”‚           â”œâ”€[36mBinop[0m
    â”‚ â”‚           â”‚ â”œâ”€[34mIn[0m
    â”‚ â”‚           â”‚ â”œâ”€[33mi[0m
    â”‚ â”‚           â”‚ â””â”€[36mCall[0m
    â”‚ â”‚           â”‚   â”œâ”€[33mfind[0m
    â”‚ â”‚           â”‚   â””â”€[36mArgs[0m
    â”‚ â”‚           â”‚     â””â”€[33ml[0m
    â”‚ â”‚           â””â”€[36mBinop[0m
    â”‚ â”‚             â”œâ”€[34mOr[0m
    â”‚ â”‚             â”œâ”€[36mCall[0m
    â”‚ â”‚             â”‚ â”œâ”€[33mdetach[0m
    â”‚ â”‚             â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚             â”‚   â”œâ”€[33mi[0m
    â”‚ â”‚             â”‚   â””â”€[33ml[0m
    â”‚ â”‚             â””â”€[36mCall[0m
    â”‚ â”‚               â”œâ”€[33mclear[0m
    â”‚ â”‚               â””â”€[36mArgs[0m
    â”‚ â”‚                 â””â”€[33mi[0m
    â”‚ â””â”€[36mAssertion[0m
    â”‚   â”œâ”€[33m_principle1[0m
    â”‚   â””â”€[36mQuantifier[0m
    â”‚     â”œâ”€[34mAll[0m
    â”‚     â”œâ”€[36mVars[0m
    â”‚     â”‚ â”œâ”€[36mVar[0m
    â”‚     â”‚ â”‚ â”œâ”€[33ml[0m
    â”‚     â”‚ â”‚ â””â”€[32mLabel[0m
    â”‚     â”‚ â””â”€[36mVar[0m
    â”‚     â”‚   â”œâ”€[33mi[0m
    â”‚     â”‚   â””â”€[32mItem[0m
    â”‚     â””â”€[36mUnop[0m
    â”‚       â”œâ”€[34mAlways[0m
    â”‚       â””â”€[36mBinop[0m
    â”‚         â”œâ”€[34mImplication[0m
    â”‚         â”œâ”€[36mUnop[0m
    â”‚         â”‚ â”œâ”€[34mHistorically[0m
    â”‚         â”‚ â””â”€[36mUnop[0m
    â”‚         â”‚   â”œâ”€[34mNot[0m
    â”‚         â”‚   â””â”€[36mBinop[0m
    â”‚         â”‚     â”œâ”€[34mOr[0m
    â”‚         â”‚     â”œâ”€[36mCall[0m
    â”‚         â”‚     â”‚ â”œâ”€[33maffix[0m
    â”‚         â”‚     â”‚ â””â”€[36mArgs[0m
    â”‚         â”‚     â”‚   â”œâ”€[33mi[0m
    â”‚         â”‚     â”‚   â””â”€[33ml[0m
    â”‚         â”‚     â””â”€[36mCall[0m
    â”‚         â”‚       â”œâ”€[33mdetach[0m
    â”‚         â”‚       â””â”€[36mArgs[0m
    â”‚         â”‚         â”œâ”€[33mi[0m
    â”‚         â”‚         â””â”€[33ml[0m
    â”‚         â””â”€[36mUnop[0m
    â”‚           â”œâ”€[34mAfter[0m
    â”‚           â””â”€[36mUnop[0m
    â”‚             â”œâ”€[34mNot[0m
    â”‚             â””â”€[36mBinop[0m
    â”‚               â”œâ”€[34mIn[0m
    â”‚               â”œâ”€[33mi[0m
    â”‚               â””â”€[36mCall[0m
    â”‚                 â”œâ”€[33mfind[0m
    â”‚                 â””â”€[36mArgs[0m
    â”‚                   â””â”€[33ml[0m
    â””â”€[36mPredicates and Functions[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33maffix[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mNone[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â”œâ”€[36mParameter[0m
      â”‚ â”‚ â”‚ â”œâ”€[33mi[0m
      â”‚ â”‚ â”‚ â””â”€[32mItem[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33ml[0m
      â”‚ â”‚   â””â”€[32mLabel[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.labels')[0m
      â”‚     â””â”€[36mBinop[0m
      â”‚       â”œâ”€[34mUnion[0m
      â”‚       â”œâ”€[33m(State.labels)[0m
      â”‚       â””â”€[33mi->l[0m
      â”œâ”€[36mPredicate[0m
      â”‚ â”œâ”€[33mdetach[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mNone[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â”œâ”€[36mParameter[0m
      â”‚ â”‚ â”‚ â”œâ”€[33mi[0m
      â”‚ â”‚ â”‚ â””â”€[32mItem[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33ml[0m
      â”‚ â”‚   â””â”€[32mLabel[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â””â”€[36mAssignment[0m
      â”‚     â”œâ”€[33m(State.labels')[0m
      â”‚     â””â”€[36mBinop[0m
      â”‚       â”œâ”€[34mDifference[0m
      â”‚       â”œâ”€[33m(State.labels)[0m
      â”‚       â””â”€[33mi->l[0m
      â”œâ”€[36mFunction[0m
      â”‚ â”œâ”€[33mfind[0m
      â”‚ â”œâ”€[36mCondition[0m
      â”‚ â”‚ â””â”€[36mNone[0m
      â”‚ â”œâ”€[36mParameters[0m
      â”‚ â”‚ â””â”€[36mParameter[0m
      â”‚ â”‚   â”œâ”€[33ml[0m
      â”‚ â”‚   â””â”€[32mLabel[0m
      â”‚ â”œâ”€[32mItem[0m
      â”‚ â””â”€[36mBody[0m
      â”‚   â””â”€[36mBinop[0m
      â”‚     â”œâ”€[34mJoin[0m
      â”‚     â”œâ”€[33ml[0m
      â”‚     â””â”€[36mUnop[0m
      â”‚       â”œâ”€[34mTilde[0m
      â”‚       â””â”€[33m(State.labels)[0m
      â””â”€[36mPredicate[0m
        â”œâ”€[33mclear[0m
        â”œâ”€[36mCondition[0m
        â”‚ â””â”€[36mNone[0m
        â”œâ”€[36mParameters[0m
        â”‚ â””â”€[36mParameter[0m
        â”‚   â”œâ”€[33mi[0m
        â”‚   â””â”€[32mItem[0m
        â””â”€[36mBody[0m
          â””â”€[36mAssignment[0m
            â”œâ”€[33m(State.labels')[0m
            â””â”€[36mParenthesis[0m
              â””â”€[36mBinop[0m
                â”œâ”€[34mDifference[0m
                â”œâ”€[33m(State.labels)[0m
                â””â”€[36mBinop[0m
                  â”œâ”€[34mProduct[0m
                  â”œâ”€[33mi[0m
                  â””â”€[33mLabel[0m
    [36mProgram[0m
    â”œâ”€[36mModule[0m
    â”‚ â”œâ”€[33mtodo_label_mail[0m
    â”‚ â””â”€[36mNo Parameters[0m
    â”œâ”€[36mPurpose[0m
    â”‚ â””â”€[36mNo Purpose[0m
    â”œâ”€[36mDependencies[0m
    â”‚ â”œâ”€[36mDependency[0m
    â”‚ â”‚ â”œâ”€[33mtodo[0m
    â”‚ â”‚ â””â”€[36mGenerics[0m
    â”‚ â”‚   â””â”€[36mGeneric[0m
    â”‚ â”‚     â”œâ”€[33memail[0m
    â”‚ â”‚     â””â”€[32mContent[0m
    â”‚ â”œâ”€[36mDependency[0m
    â”‚ â”‚ â”œâ”€[33mlabel[0m
    â”‚ â”‚ â””â”€[36mGenerics[0m
    â”‚ â”‚   â””â”€[36mGeneric[0m
    â”‚ â”‚     â”œâ”€[33memail[0m
    â”‚ â”‚     â””â”€[32mContent[0m
    â”‚ â””â”€[36mDependency[0m
    â”‚   â”œâ”€[33memail[0m
    â”‚   â””â”€[36mGenerics[0m
    â”œâ”€[36mSignatures[0m
    â”œâ”€[36mFacts[0m
    â”‚ â”œâ”€[36mFact[0m
    â”‚ â”‚ â”œâ”€[33m_sync_todo_delete0[0m
    â”‚ â”‚ â””â”€[36mUnop[0m
    â”‚ â”‚   â”œâ”€[34mAlways[0m
    â”‚ â”‚   â””â”€[36mQuantifier[0m
    â”‚ â”‚     â”œâ”€[34mAll[0m
    â”‚ â”‚     â”œâ”€[36mVars[0m
    â”‚ â”‚     â”‚ â””â”€[36mVar[0m
    â”‚ â”‚     â”‚   â”œâ”€[33mt[0m
    â”‚ â”‚     â”‚   â””â”€[32memail/Content[0m
    â”‚ â”‚     â””â”€[36mBinop[0m
    â”‚ â”‚       â”œâ”€[34mImplication[0m
    â”‚ â”‚       â”œâ”€[36mCall[0m
    â”‚ â”‚       â”‚ â”œâ”€[33mtodo/delete[0m
    â”‚ â”‚       â”‚ â””â”€[36mArgs[0m
    â”‚ â”‚       â”‚   â””â”€[33mt[0m
    â”‚ â”‚       â””â”€[36mUnop[0m
    â”‚ â”‚         â”œâ”€[34mAfter[0m
    â”‚ â”‚         â””â”€[36mCall[0m
    â”‚ â”‚           â”œâ”€[33mlabel/clear[0m
    â”‚ â”‚           â””â”€[36mArgs[0m
    â”‚ â”‚             â””â”€[33mt[0m
    â”‚ â””â”€[36mFact[0m
    â”‚   â”œâ”€[33m_sync_email_receive1[0m
    â”‚   â””â”€[36mUnop[0m
    â”‚     â”œâ”€[34mAlways[0m
    â”‚     â””â”€[36mQuantifier[0m
    â”‚       â”œâ”€[34mSome[0m
    â”‚       â”œâ”€[36mVars[0m
    â”‚       â”‚ â””â”€[36mVar[0m
    â”‚       â”‚   â”œâ”€[33mtodo_user[0m
    â”‚       â”‚   â””â”€[32memail/User[0m
    â”‚       â””â”€[36mQuantifier[0m
    â”‚         â”œâ”€[34mAll[0m
    â”‚         â”œâ”€[36mVars[0m
    â”‚         â”‚ â””â”€[36mVar[0m
    â”‚         â”‚   â”œâ”€[33mm[0m
    â”‚         â”‚   â””â”€[32memail/Message[0m
    â”‚         â””â”€[36mBinop[0m
    â”‚           â”œâ”€[34mImplication[0m
    â”‚           â”œâ”€[36mCall[0m
    â”‚           â”‚ â”œâ”€[33memail/receive[0m
    â”‚           â”‚ â””â”€[36mArgs[0m
    â”‚           â”‚   â”œâ”€[33mtodo_user[0m
    â”‚           â”‚   â””â”€[33mm[0m
    â”‚           â””â”€[36mUnop[0m
    â”‚             â”œâ”€[34mAfter[0m
    â”‚             â””â”€[36mCall[0m
    â”‚               â”œâ”€[33mtodo/add[0m
    â”‚               â””â”€[36mArgs[0m
    â”‚                 â””â”€[36mBinop[0m
    â”‚                   â”œâ”€[34mJoin[0m
    â”‚                   â”œâ”€[33mm[0m
    â”‚                   â””â”€[33m(email/State.content)[0m
    â”œâ”€[36mAssertions[0m
    â””â”€[36mPredicates and Functions[0m |}]